'use client';

import { useState, useEffect, useRef } from "react";
import { motion, AnimatePresence, useInView } from 'framer-motion';
import * as d3 from 'd3';

interface Integration {
  name: string;
  icon: string;
  category: string;
  description: string;
  popularityScore: number;
  logo?: string;
}

export const IntegrationsSection = () => {
  const [filter, setFilter] = useState('all');
  const [searchTerm, setSearchTerm] = useState('');
  const [selectedIntegration, setSelectedIntegration] = useState<Integration | null>(null);
  const [isGridView, setIsGridView] = useState(true);
  const sectionRef = useRef(null);
  const isInView = useInView(sectionRef, { once: false, amount: 0.2 });
  const chartRef = useRef(null);
  
  // –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
  const integrations: Integration[] = [
    { 
      name: "1C", 
      icon: "üíº", 
      category: "–£—á–µ—Ç", 
      description: "–ü–æ–ª–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Å 1–°: –ü—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ, –≤–∫–ª—é—á–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç –∫–∞—Ç–∞–ª–æ–≥–∞, –≤—ã–≥—Ä—É–∑–∫—É –∑–∞–∫–∞–∑–æ–≤ –∏ –∞–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏—é –æ—Å—Ç–∞—Ç–∫–æ–≤ –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.",
      popularityScore: 85,
      logo: "/assets/logos/1c.svg"
    },
    { 
      name: "–ë–∏—Ç—Ä–∏–∫—Å24", 
      icon: "üîÑ", 
      category: "CRM", 
      description: "–î–≤—É—Å—Ç–æ—Ä–æ–Ω–Ω—è—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ë–∏—Ç—Ä–∏–∫—Å24 —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø–µ—Ä–µ–¥–∞—á–µ–π –ª–∏–¥–æ–≤, —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π —Å—Ç–∞—Ç—É—Å–æ–≤ —Å–¥–µ–ª–æ–∫ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏.",
      popularityScore: 92,
      logo: "/assets/logos/bitrix24.svg"
    },
    { 
      name: "SAP", 
      icon: "üè¢", 
      category: "ERP", 
      description: "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å SAP ERP –¥–ª—è –∫—Ä—É–ø–Ω—ã—Ö –∞–≤—Ç–æ–¥–∏–ª–µ—Ä–æ–≤, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—â–∞—è –µ–¥–∏–Ω—É—é —ç–∫–æ—Å–∏—Å—Ç–µ–º—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏, —Å–∫–ª–∞–¥–æ–º –∏ –ª–æ–≥–∏—Å—Ç–∏–∫–æ–π.",
      popularityScore: 78,
      logo: "/assets/logos/sap.svg"
    },
    { 
      name: "AmoCRM", 
      icon: "üìä", 
      category: "CRM", 
      description: "–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å AmoCRM, –≤–∫–ª—é—á–∞—è –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–µ –≤–æ—Ä–æ–Ω–∫–∏ –ø—Ä–æ–¥–∞–∂, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ —Å–∏—Å—Ç–µ–º—É —Å–∫–æ—Ä–∏–Ω–≥–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤.",
      popularityScore: 88,
      logo: "/assets/logos/amocrm.svg"
    },
    { 
      name: "–ú–æ–π–°–∫–ª–∞–¥", 
      icon: "üì¶", 
      category: "–°–∫–ª–∞–¥", 
      description: "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ú–æ–π–°–∫–ª–∞–¥ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è —Ç–æ–≤–∞—Ä–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–π, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞–ª–∏—á–∏—è –∞–≤—Ç–æ –∏ –∑–∞–ø—á–∞—Å—Ç–µ–π –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤–∫–∞–º–∏.",
      popularityScore: 76,
      logo: "/assets/logos/moysklad.svg"
    },
    { 
      name: "–°–ë–ò–°", 
      icon: "üìù", 
      category: "–î–æ–∫—É–º–µ–Ω—Ç—ã", 
      description: "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç–æ–æ–±–æ—Ä–æ—Ç —á–µ—Ä–µ–∑ –°–ë–ò–° —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –ø–æ–¥–ø–∏—Å–∞–Ω–∏—è –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—á—ë—Ç–Ω–æ—Å—Ç–∏ –∏ –æ–±–º–µ–Ω–∞ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏ –∑–Ω–∞—á–∏–º—ã–º–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏.",
      popularityScore: 72,
      logo: "/assets/logos/sbis.svg"
    },
    { 
      name: "Telegram", 
      icon: "üì±", 
      category: "–ú–µ—Å—Å–µ–Ω–¥–∂–µ—Ä—ã", 
      description: "–í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –±–æ—Ç –¥–ª—è Telegram, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞–º, –ø–æ–º–æ–≥–∞–µ—Ç –≤—ã–±—Ä–∞—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å –∏ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ç–µ—Å—Ç-–¥—Ä–∞–π–≤ –ø—Ä—è–º–æ –≤ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–µ.",
      popularityScore: 94,
      logo: "/assets/logos/telegram.svg"
    },
    { 
      name: "WhatsApp", 
      icon: "üí¨", 
      category: "–ú–µ—Å—Å–µ–Ω–¥–∂–µ—Ä—ã", 
      description: "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å WhatsApp Business API –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π, –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è, —Å –ø–æ–ª–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–µ–π –ø–µ—Ä–µ–ø–∏—Å–∫–∏ –≤ CRM.",
      popularityScore: 90,
      logo: "/assets/logos/whatsapp.svg"
    },
    { 
      name: "–Ø–Ω–¥–µ–∫—Å –ú–µ—Ç—Ä–∏–∫–∞", 
      icon: "üìà", 
      category: "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞", 
      description: "–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ —Å –ø–æ–º–æ—â—å—é –Ø–Ω–¥–µ–∫—Å –ú–µ—Ç—Ä–∏–∫–∏, –≤–∫–ª—é—á–∞—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤–æ—Ä–æ–Ω–∫–∏ –ø—Ä–æ–¥–∞–∂, —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π –∏ –ø–æ–≤–µ–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.",
      popularityScore: 83,
      logo: "/assets/logos/yandex.svg"
    },
    { 
      name: "Google Analytics", 
      icon: "üîç", 
      category: "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞", 
      description: "–ü–æ–ª–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Google Analytics 4 –¥–ª—è —Å–∫–≤–æ–∑–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏, –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –∞—Ç—Ä–∏–±—É—Ü–∏–æ–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π –∏ –æ—Ü–µ–Ω–∫–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤.",
      popularityScore: 86,
      logo: "/assets/logos/google.svg"
    },
    { 
      name: "Stripe", 
      icon: "üí≥", 
      category: "–ü–ª–∞—Ç–µ–∂–∏", 
      description: "–ü—Ä–∏–µ–º –æ–Ω–ª–∞–π–Ω-–ø–ª–∞—Ç–µ–∂–µ–π —á–µ—Ä–µ–∑ Stripe —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Ä–∞—Å—Å—Ä–æ—á–∫–∏, —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π –∏ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É.",
      popularityScore: 81,
      logo: "/assets/logos/stripe.svg"
    },
    { 
      name: "–ÆKassa", 
      icon: "üí∞", 
      category: "–ü–ª–∞—Ç–µ–∂–∏", 
      description: "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ÆKassa –¥–ª—è –ø—Ä–∏–µ–º–∞ –ø–ª–∞—Ç–µ–∂–µ–π, –≤–Ω–µ—Å–µ–Ω–∏—è –ø—Ä–µ–¥–æ–ø–ª–∞—Ç—ã –∑–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –∏ —Å–µ—Ä–≤–∏—Å–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ, —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –≤—Å–µ—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Å–ø–æ—Å–æ–±–æ–≤ –æ–ø–ª–∞—Ç—ã –≤ –†–æ—Å—Å–∏–∏.",
      popularityScore: 79,
      logo: "/assets/logos/yookassa.svg"
    },
  ];
  
  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const categories = ['all', ...Array.from(new Set(integrations.map(i => i.category)))];
  
  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –ø–æ–∏—Å–∫–æ–≤–æ–º—É –∑–∞–ø—Ä–æ—Å—É
  const filteredIntegrations = integrations
    .filter(i => filter === 'all' || i.category === filter)
    .filter(i => i.name.toLowerCase().includes(searchTerm.toLowerCase()) || 
                i.description.toLowerCase().includes(searchTerm.toLowerCase()) ||
                i.category.toLowerCase().includes(searchTerm.toLowerCase()));
  
  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–∏–∞–≥—Ä–∞–º–º—É –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π
  useEffect(() => {
    if (!isInView || !chartRef.current || typeof window === 'undefined') return;
    
    try {
      // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –≥—Ä–∞—Ñ–∏–∫
      d3.select(chartRef.current).selectAll("*").remove();
      
      const container = chartRef.current;
      const width = container.clientWidth;
      const height = 300;
      const margin = { top: 30, right: 30, bottom: 70, left: 60 };
      const chartWidth = width - margin.left - margin.right;
      const chartHeight = height - margin.top - margin.bottom;
      
      // –°–æ–∑–¥–∞–µ–º SVG
      const svg = d3.select(container)
        .append("svg")
        .attr("width", width)
        .attr("height", height)
        .attr("viewBox", `0 0 ${width} ${height}`)
        .attr("style", "max-width: 100%; height: auto;");
      
      // –î–æ–±–∞–≤–ª—è–µ–º –≥—Ä—É–ø–ø—É –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞
      const g = svg.append("g")
        .attr("transform", `translate(${margin.left},${margin.top})`);
      
      // –í—ã–±–∏—Ä–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–æ–ø-8 –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π
      const topIntegrations = [...integrations]
        .sort((a, b) => b.popularityScore - a.popularityScore)
        .slice(0, 8);
      
      // –°–æ–∑–¥–∞–µ–º —à–∫–∞–ª—ã
      const x = d3.scaleBand()
        .domain(topIntegrations.map(d => d.name))
        .range([0, chartWidth])
        .padding(0.3);
      
      const y = d3.scaleLinear()
        .domain([0, 100])
        .range([chartHeight, 0]);
      
      // –°–æ–∑–¥–∞–µ–º –≥—Ä–∞–¥–∏–µ–Ω—Ç –¥–ª—è —Å—Ç–æ–ª–±—Ü–æ–≤
      const defs = svg.append("defs");
      const gradient = defs.append("linearGradient")
        .attr("id", "barGradient")
        .attr("x1", "0%")
        .attr("y1", "0%")
        .attr("x2", "0%")
        .attr("y2", "100%");
      
      gradient.append("stop")
        .attr("offset", "0%")
        .attr("stop-color", "#7B2CBF");
      
      gradient.append("stop")
        .attr("offset", "100%")
        .attr("stop-color", "#9D4EDD");
      
      // –î–æ–±–∞–≤–ª—è–µ–º –æ—Å–∏
      g.append("g")
        .attr("transform", `translate(0,${chartHeight})`)
        .call(d3.axisBottom(x))
        .selectAll("text")
        .attr("transform", "translate(-10,0)rotate(-45)")
        .style("text-anchor", "end")
        .style("font-size", "12px")
        .style("fill", "#666");
      
      g.append("g")
        .call(d3.axisLeft(y).ticks(5).tickFormat(d => `${d}%`))
        .selectAll("text")
        .style("font-size", "12px")
        .style("fill", "#666");
      
      // –î–æ–±–∞–≤–ª—è–µ–º —Å–µ—Ç–∫—É
      g.append("g")
        .attr("class", "grid")
        .call(d3.axisLeft(y)
          .tickSize(-chartWidth)
          .tickFormat('')
          .ticks(5))
        .select(".domain")
        .remove();
      
      g.selectAll(".grid line")
        .attr("stroke", "#e0e0e0")
        .attr("stroke-opacity", 0.7);
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
      svg.append("text")
        .attr("x", width / 2)
        .attr("y", 15)
        .attr("text-anchor", "middle")
        .style("font-size", "14px")
        .style("fill", "#666")
        .style("font-weight", "bold")
        .text("–ü–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π");
      
      // –†–∏—Å—É–µ–º —Å—Ç–æ–ª–±—Ü—ã —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
      g.selectAll(".bar")
        .data(topIntegrations)
        .enter()
        .append("rect")
        .attr("class", "bar")
        .attr("x", d => x(d.name))
        .attr("width", x.bandwidth())
        .attr("y", chartHeight)
        .attr("height", 0)
        .attr("fill", "url(#barGradient)")
        .attr("rx", 4)
        .transition()
        .duration(1000)
        .delay((d, i) => i * 100)
        .attr("y", d => y(d.popularityScore))
        .attr("height", d => chartHeight - y(d.popularityScore));
      
      // –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–∫–∏ –∑–Ω–∞—á–µ–Ω–∏–π –Ω–∞–¥ —Å—Ç–æ–ª–±—Ü–∞–º–∏
      g.selectAll(".label")
        .data(topIntegrations)
        .enter()
        .append("text")
        .attr("class", "label")
        .attr("x", d => x(d.name) + x.bandwidth() / 2)
        .attr("y", d => y(d.popularityScore) - 5)
        .attr("text-anchor", "middle")
        .style("font-size", "12px")
        .style("fill", "#666")
        .style("font-weight", "bold")
        .style("opacity", 0)
        .text(d => `${d.popularityScore}%`)
        .transition()
        .duration(1000)
        .delay((d, i) => i * 100 + 500)
        .style("opacity", 1);
      
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≥—Ä–∞—Ñ–∏–∫–∞:", error);
    }
  }, [isInView, filter]);
  
  const openIntegrationDetails = (integration: Integration) => {
    setSelectedIntegration(integration);
  };
  
  return (
    <section className="py-20 px-4 bg-gradient-to-b from-gray-50 to-white dark:from-gray-900/50 dark:to-gray-800/50" ref={sectionRef}>
      <div className="container mx-auto">
        <motion.div 
          className="text-center mb-12"
          initial={{ opacity: 0 }}
          animate={isInView ? { opacity: 1 } : { opacity: 0 }}
          transition={{ duration: 0.8 }}
        >
          <span className="inline-block text-primary dark:text-primary-light font-semibold mb-2">–†–ê–°–®–ò–†–Ø–ô–¢–ï –í–û–ó–ú–û–ñ–ù–û–°–¢–ò</span>
          <h2 className="text-3xl sm:text-4xl font-bold text-gray-900 dark:text-white mb-4">
            –ú–æ—â–Ω—ã–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞
          </h2>
          <p className="text-gray-600 dark:text-gray-300 max-w-2xl mx-auto">
            –ù–∞—à–∞ —Å–∏—Å—Ç–µ–º–∞ –ª–µ–≥–∫–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç—Å—è —Å –ø–æ–ø—É–ª—è—Ä–Ω—ã–º–∏ –±–∏–∑–Ω–µ—Å-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º–∏ –∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏, 
            —Å–æ–∑–¥–∞–≤–∞—è –µ–¥–∏–Ω—É—é —ç–∫–æ—Å–∏—Å—Ç–µ–º—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã–º –±–∏–∑–Ω–µ—Å–æ–º
          </p>
        </motion.div>
        
        <div className="mb-8">
          <div className="flex flex-col md:flex-row justify-between items-center gap-4 mb-6">
            {/* –§–∏–ª—å—Ç—Ä—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π */}
            <div className="flex flex-wrap justify-center gap-2">
              {categories.map(category => (
                <motion.button
                  key={category}
                  onClick={() => setFilter(category)}
                  className={`px-4 py-2 rounded-full text-sm font-medium transition-colors ${
                    filter === category 
                      ? 'bg-primary text-white shadow-md shadow-primary/20' 
                      : 'bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 border border-gray-200 dark:border-gray-700'
                  }`}
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                >
                  {category === 'all' ? '–í—Å–µ' : category}
                </motion.button>
              ))}
            </div>
            
            {/* –ü–æ–∏—Å–∫ –∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∏–¥–∞ */}
            <div className="flex items-center gap-4 w-full md:w-auto">
              <div className="relative flex-grow md:w-64">
                <input 
                  type="text" 
                  placeholder="–ü–æ–∏—Å–∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π..." 
                  value={searchTerm}
                  onChange={(e) => setSearchTerm(e.target.value)}
                  className="w-full px-4 py-2 pl-10 rounded-full border border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-300 focus:outline-none focus:ring-2 focus:ring-primary/50"
                />
                <svg 
                  className="absolute left-3 top-2.5 h-5 w-5 text-gray-400" 
                  fill="none" 
                  stroke="currentColor" 
                  viewBox="0 0 24 24"
                >
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                </svg>
              </div>
              
              <div className="flex gap-2 bg-gray-100 dark:bg-gray-800 p-1 rounded-full">
                <button
                  onClick={() => setIsGridView(true)}
                  className={`p-2 rounded-full ${
                    isGridView ? 'bg-white dark:bg-gray-700 shadow-sm' : 'text-gray-500 dark:text-gray-400'
                  }`}
                >
                  <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z" />
                  </svg>
                </button>
                <button
                  onClick={() => setIsGridView(false)}
                  className={`p-2 rounded-full ${
                    !isGridView ? 'bg-white dark:bg-gray-700 shadow-sm' : 'text-gray-500 dark:text-gray-400'
                  }`}
                >
                  <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M4 6h16M4 12h16M4 18h16" />
                  </svg>
                </button>
              </div>
            </div>
          </div>
          
          {/* –ì—Ä–∞—Ñ–∏–∫ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏ - –≤–∏–¥–µ–Ω —Ç–æ–ª—å–∫–æ –≤ —Ä–µ–∂–∏–º–µ —Å–ø–∏—Å–∫–∞ */}
          <AnimatePresence>
            {!isGridView && (
              <motion.div 
                className="bg-white dark:bg-gray-800 rounded-xl shadow-md p-4 mb-8"
                initial={{ opacity: 0, height: 0 }}
                animate={{ opacity: 1, height: 'auto' }}
                exit={{ opacity: 0, height: 0 }}
                transition={{ duration: 0.5 }}
              >
                <div ref={chartRef} className="w-full h-[300px]"></div>
              </motion.div>
            )}
          </AnimatePresence>
        </div>
        
        {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π –≤ –≤–∏–¥–µ —Å–µ—Ç–∫–∏ –∏–ª–∏ —Å–ø–∏—Å–∫–∞ */}
        <AnimatePresence mode="wait">
          {isGridView ? (
            <motion.div 
              key="grid"
              className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4"
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              exit={{ opacity: 0 }}
              transition={{ duration: 0.5 }}
            >
              {filteredIntegrations.map((integration, index) => (
                <motion.div
                  key={integration.name}
                  layout
                  initial={{ opacity: 0, scale: 0.8 }}
                  animate={{ opacity: 1, scale: 1 }}
                  exit={{ opacity: 0, scale: 0.8 }}
                  transition={{ duration: 0.3, delay: index * 0.05 }}
                  className="bg-white dark:bg-gray-800 rounded-lg p-4 shadow-md hover:shadow-lg transition-shadow border border-gray-100 dark:border-gray-700"
                  onClick={() => openIntegrationDetails(integration)}
                >
                  <div className="flex flex-col items-center justify-center text-center h-40">
                    <div className="text-4xl mb-3 bg-primary/10 dark:bg-primary-dark/20 w-16 h-16 rounded-full flex items-center justify-center">
                      {integration.icon}
                    </div>
                    <h3 className="font-bold text-gray-900 dark:text-white mb-1">
                      {integration.name}
                    </h3>
                    <span className="text-xs text-gray-500 dark:text-gray-400 bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded-full">
                      {integration.category}
                    </span>
                    <div className="w-full mt-3 h-1 bg-gray-100 dark:bg-gray-700 rounded-full overflow-hidden">
                      <motion.div 
                        className="h-full bg-gradient-to-r from-primary to-primary-light"
                        initial={{ width: 0 }}
                        whileInView={{ width: `${integration.popularityScore}%` }}
                        viewport={{ once: true }}
                        transition={{ duration: 1, delay: 0.2 }}
                      ></motion.div>
                    </div>
                  </div>
                </motion.div>
              ))}
            </motion.div>
          ) : (
            <motion.div 
              key="list"
              className="space-y-4"
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              exit={{ opacity: 0 }}
              transition={{ duration: 0.5 }}
            >
              {filteredIntegrations.map((integration, index) => (
                <motion.div
                  key={integration.name}
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  exit={{ opacity: 0, y: 20 }}
                  transition={{ duration: 0.3, delay: index * 0.05 }}
                  className="bg-white dark:bg-gray-800 rounded-lg p-4 shadow-md hover:shadow-lg transition-shadow border border-gray-100 dark:border-gray-700 cursor-pointer"
                  onClick={() => openIntegrationDetails(integration)}
                >
                  <div className="flex items-center gap-4">
                    <div className="text-3xl bg-primary/10 dark:bg-primary-dark/20 w-12 h-12 rounded-full flex items-center justify-center flex-shrink-0">
                      {integration.icon}
                    </div>
                    <div className="flex-grow">
                      <div className="flex justify-between items-center mb-1">
                        <h3 className="font-bold text-gray-900 dark:text-white">
                          {integration.name}
                        </h3>
                        <span className="text-xs text-gray-500 dark:text-gray-400 bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded-full">
                          {integration.category}
                        </span>
                      </div>
                      <p className="text-sm text-gray-600 dark:text-gray-300 line-clamp-2">
                        {integration.description}
                      </p>
                      <div className="flex items-center mt-2">
                        <div className="w-full h-1 bg-gray-100 dark:bg-gray-700 rounded-full overflow-hidden">
                          <motion.div 
                            className="h-full bg-gradient-to-r from-primary to-primary-light"
                            initial={{ width: 0 }}
                            whileInView={{ width: `${integration.popularityScore}%` }}
                            viewport={{ once: true }}
                            transition={{ duration: 1, delay: 0.2 }}
                          ></motion.div>
                        </div>
                        <span className="ml-2 text-xs font-medium text-gray-700 dark:text-gray-300">
                          {integration.popularityScore}%
                        </span>
                      </div>
                    </div>
                    <svg className="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M9 5l7 7-7 7" />
                    </svg>
                  </div>
                </motion.div>
              ))}
            </motion.div>
          )}
        </AnimatePresence>
        
        {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –¥–µ—Ç–∞–ª—è–º–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ */}
        <AnimatePresence>
          {selectedIntegration && (
            <motion.div
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              exit={{ opacity: 0 }}
              className="fixed inset-0 z-50 flex items-center justify-center p-4 bg-black bg-opacity-50"
              onClick={() => setSelectedIntegration(null)}
            >
           <motion.div
                initial={{ scale: 0.9, y: 20 }}
                animate={{ scale: 1, y: 0 }}
                exit={{ scale: 0.9, y: 20 }}
                className="bg-white dark:bg-gray-800 rounded-xl shadow-xl p-6 max-w-2xl w-full max-h-[80vh] overflow-y-auto"
                onClick={(e) => e.stopPropagation()}
              >
                <div className="flex justify-between items-start mb-6">
                  <div className="flex items-center gap-4">
                    <div className="text-4xl bg-primary/10 dark:bg-primary-dark/20 w-16 h-16 rounded-full flex items-center justify-center">
                      {selectedIntegration.icon}
                    </div>
                    <div>
                      <h3 className="text-xl font-bold text-gray-900 dark:text-white">
                        {selectedIntegration.name}
                      </h3>
                      <span className="text-sm text-gray-500 dark:text-gray-400 bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded-full">
                        {selectedIntegration.category}
                      </span>
                    </div>
                  </div>
                  <button 
                    className="p-2 rounded-full hover:bg-gray-100 dark:hover:bg-gray-700"
                    onClick={() => setSelectedIntegration(null)}
                  >
                    <svg className="w-6 h-6 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                  </button>
                </div>
                
                <p className="text-gray-700 dark:text-gray-300 mb-6">
                  {selectedIntegration.description}
                </p>
                
                {/* –†–µ–π—Ç–∏–Ω–≥ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏ */}
                <div className="mb-6">
                  <h4 className="text-sm font-semibold text-gray-700 dark:text-gray-300 mb-2">
                    –ü–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å —Å—Ä–µ–¥–∏ –∞–≤—Ç–æ–¥–∏–ª–µ—Ä–æ–≤
                  </h4>
                  <div className="flex items-center">
                    <div className="w-full h-2 bg-gray-100 dark:bg-gray-700 rounded-full overflow-hidden">
                      <motion.div 
                        className="h-full bg-gradient-to-r from-primary to-primary-light"
                        initial={{ width: 0 }}
                        animate={{ width: `${selectedIntegration.popularityScore}%` }}
                        transition={{ duration: 0.8 }}
                      ></motion.div>
                    </div>
                    <span className="ml-3 font-bold text-primary dark:text-primary-light">
                      {selectedIntegration.popularityScore}%
                    </span>
                  </div>
                </div>
                
                {/* –ö–ª—é—á–µ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ */}
                <div className="mb-6">
                  <h4 className="text-sm font-semibold text-gray-700 dark:text-gray-300 mb-3">
                    –ö–ª—é—á–µ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
                  </h4>
                  <ul className="grid grid-cols-1 md:grid-cols-2 gap-2">
                    {[
                      "–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏",
                      "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Ä—É—Ç–∏–Ω–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤",
                      "–ï–¥–∏–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è",
                      "–ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞",
                      "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –∏ —Ç—Ä–∏–≥–≥–µ—Ä—ã",
                      "–ü–æ–¥—Ä–æ–±–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –æ—Ç—á–µ—Ç—ã"
                    ].map((feature, index) => (
                      <motion.li 
                        key={index}
                        initial={{ opacity: 0, x: -10 }}
                        animate={{ opacity: 1, x: 0 }}
                        transition={{ delay: index * 0.1 }}
                        className="flex items-start"
                      >
                        <svg className="w-5 h-5 text-primary mt-0.5 mr-2 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M5 13l4 4L19 7" />
                        </svg>
                        <span className="text-sm text-gray-600 dark:text-gray-400">{feature}</span>
                      </motion.li>
                    ))}
                  </ul>
                </div>
                
                {/* –ü—Ä–æ—Ü–µ—Å—Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ */}
                <div className="mb-6">
                  <h4 className="text-sm font-semibold text-gray-700 dark:text-gray-300 mb-3">
                    –ü—Ä–æ—Ü–µ—Å—Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
                  </h4>
                  <div className="relative pl-8">
                    <div className="absolute left-3 top-0 bottom-0 w-0.5 bg-gray-200 dark:bg-gray-700"></div>
                    
                    {["–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ API-–∫–ª—é—á–µ–π", "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤–∏–ª —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏", "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã—Ö", "–ó–∞–ø—É—Å–∫ –≤ —Ä–∞–±–æ—á–µ–º —Ä–µ–∂–∏–º–µ"].map((step, index) => (
                      <motion.div 
                        key={index}
                        className="mb-4 relative"
                        initial={{ opacity: 0, y: 10 }}
                        animate={{ opacity: 1, y: 0 }}
                        transition={{ delay: 0.3 + index * 0.1 }}
                      >
                        <div className="absolute -left-8 bg-primary rounded-full w-6 h-6 flex items-center justify-center text-white text-xs font-bold">
                          {index + 1}
                        </div>
                        <h5 className="text-sm font-medium text-gray-800 dark:text-gray-200">
                          {step}
                        </h5>
                        <p className="text-xs text-gray-600 dark:text-gray-400 mt-1">
                          {index === 0 && "–ü–æ–ª—É—á–∏—Ç–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ API-–∫–ª—é—á–∏ –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ."}
                          {index === 1 && "–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ, –∫–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –∏ —Å–æ–±—ã—Ç–∏—è –±—É–¥—É—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è."}
                          {index === 2 && "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º."}
                          {index === 3 && "–ó–∞–ø—É—Å—Ç–∏—Ç–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –≤ –±–æ–µ–≤–æ–º —Ä–µ–∂–∏–º–µ —Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º."}
                        </p>
                      </motion.div>
                    ))}
                  </div>
                </div>
                
                {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
                <div className="flex justify-between">
                  <motion.button
                    whileHover={{ scale: 1.05 }}
                    whileTap={{ scale: 0.95 }}
                    className="px-4 py-2 bg-white dark:bg-gray-700 border border-primary dark:border-primary-light text-primary dark:text-primary-light rounded-full text-sm font-medium"
                  >
                    –ü–æ–¥—Ä–æ–±–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
                  </motion.button>
                  <motion.button
                    whileHover={{ scale: 1.05 }}
                    whileTap={{ scale: 0.95 }}
                    className="px-4 py-2 bg-primary text-white rounded-full text-sm font-medium"
                  >
                    –ü–æ–¥–∫–ª—é—á–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é
                  </motion.button>
                </div>
              </motion.div>
            </motion.div>
          )}
        </AnimatePresence>
        
        {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –µ—Å–ª–∏ –Ω–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ */}
        {filteredIntegrations.length === 0 && (
          <motion.div 
            className="bg-white dark:bg-gray-800 rounded-lg p-8 text-center shadow-md border border-gray-100 dark:border-gray-700"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ duration: 0.5 }}
          >
            <div className="text-4xl mb-4">üîç</div>
            <h3 className="text-xl font-bold text-gray-900 dark:text-white mb-2">
              –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
            </h3>
            <p className="text-gray-600 dark:text-gray-400 mb-4">
              –ù–µ –Ω–∞–π–¥–µ–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞.
            </p>
            <button 
              onClick={() => {setFilter('all'); setSearchTerm('');}}
              className="px-4 py-2 bg-primary text-white rounded-full text-sm font-medium inline-flex items-center"
            >
              <svg className="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
              </svg>
              –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
            </button>
          </motion.div>
        )}
        
        {/* CTA —Å–µ–∫—Ü–∏—è */}
        <motion.div 
          className="mt-16 text-center"
          initial={{ opacity: 0, y: 20 }}
          animate={isInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
          transition={{ duration: 0.6, delay: 0.4 }}
        >
          <h3 className="text-xl font-bold text-gray-900 dark:text-white mb-4">
            –ù–µ –Ω–∞—à–ª–∏ –Ω—É–∂–Ω—É—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é?
          </h3>
          <p className="text-gray-600 dark:text-gray-300 mb-8 max-w-2xl mx-auto">
            –ú—ã –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —Ä–∞—Å—à–∏—Ä—è–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π. –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏, —á—Ç–æ–±—ã –∑–∞–∫–∞–∑–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É 
            —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞.
          </p>
          
          <div className="flex flex-col sm:flex-row justify-center gap-4">
            <motion.button
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
              className="px-8 py-3 bg-primary hover:bg-primary-dark text-white font-medium rounded-full transition-colors shadow-lg inline-flex items-center justify-center"
            >
              <svg className="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
              </svg>
              –ó–∞–ø—Ä–æ—Å–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é
            </motion.button>
            
            <motion.button
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
              className="px-8 py-3 bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-300 border border-gray-200 dark:border-gray-700 font-medium rounded-full transition-colors inline-flex items-center justify-center"
            >
              <svg className="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z" />
              </svg>
              –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è
            </motion.button>
          </div>
        </motion.div>
      </div>
      
      <style jsx>{`
        .line-clamp-2 {
          display: -webkit-box;
          -webkit-line-clamp: 2;
          -webkit-box-orient: vertical;
          overflow: hidden;
        }
      `}</style>
    </section>
  );
};