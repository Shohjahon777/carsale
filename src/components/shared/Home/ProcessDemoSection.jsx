/* eslint-disable react-hooks/exhaustive-deps */
'use client';

import { useRef, useState, useEffect } from "react";
import { motion, AnimatePresence, useInView } from 'framer-motion';
import * as d3 from 'd3';

export const ProcessDemoSection = () => {
  const [activeStep, setActiveStep] = useState(0);
  const [isPlaying, setIsPlaying] = useState(false);
  const [isD3Ready, setIsD3Ready] = useState(false);
  const containerRef = useRef(null);
  const isInView = useInView(containerRef, { once: false, amount: 0.3 });
  const intervalRef = useRef<NodeJS.Timeout | null>(null);
  
  // –ë–æ–ª–µ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∏ –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —à–∞–≥–∏
  const steps = [
    {
      title: "–ò–º–ø–æ—Ä—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π",
      description: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ —Å –ø–æ–ª–Ω–æ–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π",
      icon: "üöò",
      features: [
        "–ú–∞—Å—Å–æ–≤—ã–π –∏–º–ø–æ—Ä—Ç –∏–∑ Excel/CSV",
        "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å API –¥–∏–ª–µ—Ä—Å–∫–∏—Ö —Ü–µ–Ω—Ç—Ä–æ–≤",
        "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–æ–≥–∞—â–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–æ–≤"
      ],
      benefits: [
        "–≠–∫–æ–Ω–æ–º–∏—è 85% –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–∞—Ç–∞–ª–æ–≥–∞",
        "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏",
        "–ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –Ω–∞ –≤—Å–µ—Ö –ø–ª–æ—â–∞–¥–∫–∞—Ö"
      ],
      visualization: "import"
    },
    {
      title: "–ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è –ª–∏–¥–æ–≤",
      description: "–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—Ü–µ–Ω–∫–æ–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª–∞",
      icon: "üë•",
      features: [
        "–ò–ò-–∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –ª–∏–¥–æ–≤ –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É",
        "–ê–≤—Ç–æ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –æ–ø—ã—Ç—É –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤",
        "–û–º–Ω–∏–∫–∞–Ω–∞–ª—å–Ω—ã–π —Å–±–æ—Ä –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤"
      ],
      benefits: [
        "–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ –≤ –ø—Ä–æ–¥–∞–∂—É –Ω–∞ 37%",
        "–°–æ–∫—Ä–∞—â–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –ø–µ—Ä–≤–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –Ω–∞ 76%",
        "–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞"
      ],
      visualization: "leads"
    },
    {
      title: "–í–µ–¥–µ–Ω–∏–µ —Å–¥–µ–ª–∫–∏",
      description: "–¶–∏—Ñ—Ä–æ–≤–æ–π –ø—Ä–æ—Ü–µ—Å—Å –≤–µ–¥–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞ —Å –ø—Ä–µ–¥–∏–∫—Ç–∏–≤–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π –Ω–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–ø–µ",
      icon: "ü§ù",
      features: [
        "–ì–∏–±–∫–∏–µ –≤–æ—Ä–æ–Ω–∫–∏ –ø—Ä–æ–¥–∞–∂ —Å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–µ–π",
        "–ü—Ä–µ–¥–∏–∫—Ç–∏–≤–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ —Å–¥–µ–ª–∫–∏",
        "–¶–∏—Ñ—Ä–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞"
      ],
      benefits: [
        "–£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å—Ä–µ–¥–Ω–µ–≥–æ —á–µ–∫–∞ –Ω–∞ 15%",
        "–°–æ–∫—Ä–∞—â–µ–Ω–∏–µ —Ü–∏–∫–ª–∞ —Å–¥–µ–ª–∫–∏ –Ω–∞ 40%",
        "–ü–æ–ª–Ω–∞—è –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –ø—Ä–æ—Ü–µ—Å—Å–∞ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞"
      ],
      visualization: "deal"
    },
    {
      title: "–¶–∏—Ñ—Ä–æ–≤–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ",
      description: "–ü–æ–ª–Ω–æ—Å—Ç—å—é —Ü–∏—Ñ—Ä–æ–≤–æ–π –ø—Ä–æ—Ü–µ—Å—Å –¥–æ–∫—É–º–µ–Ω—Ç–æ–æ–±–æ—Ä–æ—Ç–∞ —Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ–¥–ø–∏—Å—å—é",
      icon: "üìù",
      features: [
        "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ–¥–ø–∏—Å—å –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤",
        "–ê–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ –¥–∞–Ω–Ω—ã–º –∫–ª–∏–µ–Ω—Ç–∞",
        "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –±–∞–Ω–∫–∞–º–∏ –∏ —Å—Ç—Ä–∞—Ö–æ–≤—ã–º–∏"
      ],
      benefits: [
        "–°–æ–∫—Ä–∞—â–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –Ω–∞ 90%",
        "–ü–æ–≤—ã—à–µ–Ω–∏–µ —Ç–æ—á–Ω–æ—Å—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –Ω–∞ 100%",
        "–ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤—Å–µ—Ö –∫–æ–ø–∏–π –∫–ª–∏–µ–Ω—Ç—É"
      ],
      visualization: "docs"
    }
  ];
  
  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —à–∞–≥–æ–≤ –ø—Ä–∏ –±–µ–∑–¥–µ–π—Å—Ç–≤–∏–∏
  useEffect(() => {
    if (isPlaying && isInView) {
      intervalRef.current = setInterval(() => {
        setActiveStep((prev) => (prev === steps.length - 1 ? 0 : prev + 1));
      }, 8000); // –£–≤–µ–ª–∏—á–µ–Ω–æ –¥–ª—è –±–æ–ª–µ–µ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    } else if (intervalRef.current) {
      clearInterval(intervalRef.current);
    }
    
    return () => {
      if (intervalRef.current) {
        clearInterval(intervalRef.current);
      }
    };
  }, [isPlaying, isInView, steps.length]);
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ, –∫–æ–≥–¥–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏
  useEffect(() => {
    if (isInView) {
      setIsPlaying(true);
    } else {
      setIsPlaying(false);
    }
  }, [isInView]);
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ —ç—Ç–∞–ø–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º D3
  useEffect(() => {
    if (!isInView || typeof window === 'undefined') return;
    
    // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏
    const visualization = document.getElementById('process-visualization');
    if (!visualization) return;
    
    try {
      d3.select(visualization).selectAll("*").remove();
      
      const width = visualization.clientWidth;
      const height = visualization.clientHeight;
      
      // –°–æ–∑–¥–∞–µ–º SVG —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —Ä–∞–∑–º–µ—Ä–∞–º–∏
      const svg = d3.select(visualization)
        .append("svg")
        .attr("width", width)
        .attr("height", height)
        .attr("viewBox", `0 0 ${width} ${height}`)
        .attr("style", "max-width: 100%; height: auto;");
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ D3
      setIsD3Ready(true);
      
      // –û–±—â–∏–µ —Å—Ç–∏–ª–∏ –¥–ª—è –≤—Å–µ—Ö –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–π
      const defs = svg.append("defs");
      
      // –ì—Ä–∞–¥–∏–µ–Ω—Ç –¥–ª—è –≤—Å–µ—Ö –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–π
      const mainGradient = defs.append("linearGradient")
        .attr("id", "mainGradient")
        .attr("x1", "0%")
        .attr("y1", "0%")
        .attr("x2", "100%")
        .attr("y2", "100%");
        
      mainGradient.append("stop")
        .attr("offset", "0%")
        .attr("stop-color", "#7B2CBF");
        
      mainGradient.append("stop")
        .attr("offset", "100%")
        .attr("stop-color", "#9D4EDD");
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â—É—é –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—é
      const currentVisualization = steps[activeStep].visualization;
      
      // –ì—Ä—É–ø–ø–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–π –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏
      const mainGroup = svg.append("g")
        .attr("opacity", 0)
        .attr("transform", `translate(${width/2}, ${height/2})`);
      
      // –ü–ª–∞–≤–Ω–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏
      mainGroup.transition()
        .duration(800)
        .attr("opacity", 1);
      
      if (currentVisualization === "import") {
        renderImportVisualization(mainGroup, width, height, defs);
      } else if (currentVisualization === "leads") {
        renderLeadsVisualization(mainGroup, width, height, defs);
      } else if (currentVisualization === "deal") {
        renderDealVisualization(mainGroup, width, height, defs);
      } else if (currentVisualization === "docs") {
        renderDocsVisualization(mainGroup, width, height, defs);
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏:", error);
      setIsD3Ready(false);
    }
    
    // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    return () => {
      if (visualization) {
        d3.select(visualization).selectAll("*").remove();
      }
    };
  }, [activeStep, isInView, steps]);
  
  // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–π
  const renderImportVisualization = (group, width, height, defs) => {
    // –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã
    group.attr("transform", `translate(${width/2}, ${height/2})`);
    
    // –°–æ–∑–¥–∞–µ–º —Ñ–æ–Ω–æ–≤—É—é "–¥–æ—Å–∫—É"
    group.append("rect")
      .attr("x", -width/2 + 20)
      .attr("y", -height/2 + 20)
      .attr("width", width - 40)
      .attr("height", height - 40)
      .attr("rx", 10)
      .attr("fill", "#f9f9f9")
      .attr("stroke", "#e0e0e0")
      .attr("stroke-width", 1);
    
    // –°–æ–∑–¥–∞–µ–º –≥—Ä–∞–¥–∏–µ–Ω—Ç –¥–ª—è –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
    const carGradient = defs.append("linearGradient")
      .attr("id", "carGradient")
      .attr("x1", "0%")
      .attr("y1", "0%")
      .attr("x2", "100%")
      .attr("y2", "100%");
      
    carGradient.append("stop")
      .attr("offset", "0%")
      .attr("stop-color", "#7B2CBF");
      
    carGradient.append("stop")
      .attr("offset", "100%")
      .attr("stop-color", "#9D4EDD");
    
    // –°–∏–ª—É—ç—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª—è
    const carSilhouette = "M10,40 L70,40 C75,40 75,35 75,35 L75,25 C75,25 75,20 70,20 L55,20 L50,10 L30,10 L25,20 L10,20 C5,20 5,25 5,25 L5,35 C5,35 5,40 10,40 Z";
    
    // –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∞—à–∏–Ω
    for (let i = 0; i < 4; i++) {
      const car = group.append("g")
        .attr("transform", `translate(${-width/2 - 100}, ${-height/4 + i * 30})`)
        .attr("opacity", 0);
      
      // –ö—É–∑–æ–≤ –∞–≤—Ç–æ–º–æ–±–∏–ª—è
      car.append("path")
        .attr("d", carSilhouette)
        .attr("fill", "url(#carGradient)")
        .attr("stroke", "#5A189A")
        .attr("stroke-width", 1);
      
      // –ö–æ–ª–µ—Å–∞
      car.append("circle")
        .attr("cx", 20)
        .attr("cy", 40)
        .attr("r", 8)
        .attr("fill", "#333");
        
      car.append("circle")
        .attr("cx", 60)
        .attr("cy", 40)
        .attr("r", 8)
        .attr("fill", "#333");
      
      // –û–∫–Ω–∞
      car.append("rect")
        .attr("x", 30)
        .attr("y", 15)
        .attr("width", 20)
        .attr("height", 10)
        .attr("fill", "#B8C5F7");
      
      // –ê–Ω–∏–º–∞—Ü–∏—è –¥–≤–∏–∂–µ–Ω–∏—è —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º–∏ —Ç–∞–π–º-–∞—É—Ç–∞–º–∏
      car.transition()
        .delay(i * 800)
        .duration(500)
        .attr("opacity", 1)
        .transition()
        .duration(2500)
        .attr("transform", `translate(${width/2}, ${-height/4 + i * 30})`)
        .transition()
        .delay(200)
        .duration(300)
        .attr("opacity", 0);
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ —Å–∏—Å—Ç–µ–º—É —Å–ø—Ä–∞–≤–∞
    const database = group.append("g")
      .attr("transform", `translate(${width/3}, 0)`)
      .attr("opacity", 0);
    
    // –ö–æ—Ä–ø—É—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    database.append("path")
      .attr("d", `M-30,-40 L30,-40 L30,20 L-30,20 Z`)
      .attr("fill", "#f0f0f0")
      .attr("stroke", "#7B2CBF")
      .attr("stroke-width", 2);
    
    // –í–µ—Ä—Ö–Ω—è—è —á–∞—Å—Ç—å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    database.append("ellipse")
      .attr("cx", 0)
      .attr("cy", -40)
      .attr("rx", 30)
      .attr("ry", 10)
      .attr("fill", "#f0f0f0")
      .attr("stroke", "#7B2CBF")
      .attr("stroke-width", 2);
    
    // –ù–∏–∂–Ω—è—è —á–∞—Å—Ç—å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    database.append("ellipse")
      .attr("cx", 0)
      .attr("cy", 20)
      .attr("rx", 30)
      .attr("ry", 10)
      .attr("fill", "#f0f0f0")
      .attr("stroke", "#7B2CBF")
      .attr("stroke-width", 2);
      
    // –õ–∏–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö
    database.append("line")
      .attr("x1", -20)
      .attr("y1", -20)
      .attr("x2", 20)
      .attr("y2", -20)
      .attr("stroke", "#7B2CBF")
      .attr("stroke-width", 2);
      
    database.append("line")
      .attr("x1", -15)
      .attr("y1", -5)
      .attr("x2", 15)
      .attr("y2", -5)
      .attr("stroke", "#7B2CBF")
      .attr("stroke-width", 2);
      
    database.append("line")
      .attr("x1", -20)
      .attr("y1", 10)
      .attr("x2", 20)
      .attr("y2", 10)
      .attr("stroke", "#7B2CBF")
      .attr("stroke-width", 2);
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    database.transition()
      .delay(1000)
      .duration(800)
      .attr("opacity", 1);
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª Excel —Å–ª–µ–≤–∞
    const excelFile = group.append("g")
      .attr("transform", `translate(${-width/3}, 0)`)
      .attr("opacity", 0);
    
    // –ò–∫–æ–Ω–∫–∞ Excel
    excelFile.append("rect")
      .attr("x", -25)
      .attr("y", -30)
      .attr("width", 50)
      .attr("height", 60)
      .attr("rx", 3)
      .attr("fill", "#E2F0D9")
      .attr("stroke", "#217346")
      .attr("stroke-width", 2);
    
    // –õ–æ–≥–æ—Ç–∏–ø Excel
    excelFile.append("text")
      .attr("x", 0)
      .attr("y", 0)
      .attr("text-anchor", "middle")
      .attr("dominant-baseline", "middle")
      .attr("font-size", "24px")
      .attr("font-family", "Arial")
      .attr("font-weight", "bold")
      .attr("fill", "#217346")
      .text("X");
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞
    excelFile.transition()
      .delay(500)
      .duration(800)
      .attr("opacity", 1)
      .transition()
      .duration(1000)
      .attr("transform", `translate(${-width/3}, -10)`)
      .transition()
      .duration(1000)
      .attr("transform", `translate(${-width/3}, 0)`)
      .on("end", function repeat() {
        d3.select(this)
          .transition()
          .duration(1000)
          .attr("transform", `translate(${-width/3}, -10)`)
          .transition()
          .duration(1000)
          .attr("transform", `translate(${-width/3}, 0)`)
          .on("end", repeat);
      });
  };
  
  const renderLeadsVisualization = (group, width, height, defs) => {
    // –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã
    group.attr("transform", `translate(${width/2}, ${height/2})`);
    
    // –°–æ–∑–¥–∞–µ–º —Ñ–æ–Ω–æ–≤—É—é "–¥–æ—Å–∫—É"
    group.append("rect")
      .attr("x", -width/2 + 20)
      .attr("y", -height/2 + 20)
      .attr("width", width - 40)
      .attr("height", height - 40)
      .attr("rx", 10)
      .attr("fill", "#f9f9f9")
      .attr("stroke", "#e0e0e0")
      .attr("stroke-width", 1);
    
    // –°–æ–∑–¥–∞–µ–º –≥—Ä–∞–¥–∏–µ–Ω—Ç –¥–ª—è –≤–æ—Ä–æ–Ω–∫–∏
    const funnelGradient = defs.append("linearGradient")
      .attr("id", "funnelGradient")
      .attr("x1", "0%")
      .attr("y1", "0%")
      .attr("x2", "0%")
      .attr("y2", "100%");
      
    funnelGradient.append("stop")
      .attr("offset", "0%")
      .attr("stop-color", "#7B2CBF");
      
    funnelGradient.append("stop")
      .attr("offset", "100%")
      .attr("stop-color", "#9D4EDD");
    
    // –†–∏—Å—É–µ–º –≤–æ—Ä–æ–Ω–∫—É
    const funnelGroup = group.append("g")
      .attr("transform", `translate(${-75}, ${-height/4})`);
      
    funnelGroup.append("path")
      .attr("d", `M0,0 L150,0 L125,${height/2} L25,${height/2} Z`)
      .attr("fill", "url(#funnelGradient)")
      .attr("opacity", 0.7)
      .attr("stroke", "#5A189A")
      .attr("stroke-width", 2);
      
    // –î–æ–±–∞–≤–ª—è–µ–º –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–µ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏ –≤ –≤–æ—Ä–æ–Ω–∫–µ
    for (let i = 1; i <= 3; i++) {
      const y = (height/2) * (i/4);
      funnelGroup.append("line")
        .attr("x1", 0 + (150 - 125) * (i/4))
        .attr("y1", y)
        .attr("x2", 150 - (150 - 125) * (i/4))
        .attr("y2", y)
        .attr("stroke", "white")
        .attr("stroke-width", 1)
        .attr("stroke-dasharray", "3,3");
        
      const labels = ["–ù–æ–≤—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã", "–ö–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ", "–ì–æ—Ä—è—á–∏–µ –ª–∏–¥—ã", "–ü—Ä–æ–¥–∞–∂–∏"];
      
      funnelGroup.append("text")
        .attr("x", -10)
        .attr("y", y - 10)
        .attr("text-anchor", "end")
        .attr("fill", "#666")
        .attr("font-size", "12px")
        .text(labels[i-1]);
        
      if (i === 3) {
        funnelGroup.append("text")
          .attr("x", -10)
          .attr("y", (height/2) + 15)
          .attr("text-anchor", "end")
          .attr("fill", "#666")
          .attr("font-size", "12px")
          .text(labels[3]);
      }
    }
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –¥–≤–∏–∂–µ–Ω–∏—è —Ç–æ—á–µ–∫ —á–µ—Ä–µ–∑ –≤–æ—Ä–æ–Ω–∫—É
    const circleColors = ["#FF5733", "#33FF57", "#3357FF", "#F3FF33", "#FF33F3"];
    
    // –°–æ–∑–¥–∞–µ–º —Ç–æ—á–∫–∏ —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º–∏ —Ç–∞–π–º-–∞—É—Ç–∞–º–∏
    for (let i = 0; i < 10; i++) {
      const startDelay = Math.random() * 3000;
      const circleRadius = 5 + Math.random() * 3;
      
      const circle = funnelGroup.append("circle")
        .attr("cx", 75 + (Math.random() * 70 - 35))
        .attr("cy", -20)
        .attr("r", circleRadius)
        .attr("fill", circleColors[Math.floor(Math.random() * circleColors.length)])
        .attr("opacity", 0);
        
      // –î–≤–∏–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –≤–æ—Ä–æ–Ω–∫—É —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π (—É–≤–µ–ª–∏—á–µ–Ω—ã —Ç–∞–π–º-–∞—É—Ç—ã)
      circle.transition()
        .delay(startDelay)
        .duration(600)
        .attr("opacity", 0.8)
        .transition()
        .duration(4000)
        .attr("cx", 75 + (Math.random() * 30 - 15))
        .attr("cy", height/2 + 10)
        .transition()
        .duration(400)
        .attr("opacity", 0);
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ —Å–ø—Ä–∞–≤–∞
    const conversionIndicator = group.append("g")
      .attr("transform", `translate(${width/4}, 0)`)
      .attr("opacity", 0);
    
    // –ö—Ä—É–≥–æ–≤–æ–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
    conversionIndicator.append("circle")
      .attr("r", 40)
      .attr("fill", "none")
      .attr("stroke", "#e0e0e0")
      .attr("stroke-width", 5);
    
    // –ü—Ä–æ—Ü–µ–Ω—Ç –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ (–¥—É–≥–∞)
    const arc = d3.arc()
      .innerRadius(35)
      .outerRadius(45)
      .startAngle(0)
      .endAngle(Math.PI * 2 * 0.42); // 42% –∫–æ–Ω–≤–µ—Ä—Å–∏—è
    
    conversionIndicator.append("path")
      .attr("d", arc)
      .attr("fill", "#7B2CBF");
    
    // –¢–µ–∫—Å—Ç –∫–æ–Ω–≤–µ—Ä—Å–∏–∏
    conversionIndicator.append("text")
      .attr("text-anchor", "middle")
      .attr("dominant-baseline", "middle")
      .attr("font-size", "24px")
      .attr("font-weight", "bold")
      .attr("fill", "#666")
      .text("42%");
    
    conversionIndicator.append("text")
      .attr("y", 25)
      .attr("text-anchor", "middle")
      .attr("font-size", "12px")
      .attr("fill", "#666")
      .text("–ö–æ–Ω–≤–µ—Ä—Å–∏—è");
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞
    conversionIndicator.transition()
      .delay(1500)
      .duration(1000)
      .attr("opacity", 1);
  };
  
  const renderDealVisualization = (group, width, height, defs) => {
    // –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã
    group.attr("transform", `translate(${width/2}, ${height/2})`);
    
    // –°–æ–∑–¥–∞–µ–º —Ñ–æ–Ω–æ–≤—É—é "–¥–æ—Å–∫—É"
    group.append("rect")
      .attr("x", -width/2 + 20)
      .attr("y", -height/2 + 20)
      .attr("width", width - 40)
      .attr("height", height - 40)
      .attr("rx", 10)
      .attr("fill", "#f9f9f9")
      .attr("stroke", "#e0e0e0")
      .attr("stroke-width", 1);
    
    // –ì—Ä–∞–¥–∏–µ–Ω—Ç –¥–ª—è –ø—É—Ç–∏
    const pathGradient = defs.append("linearGradient")
      .attr("id", "pathGradient")
      .attr("x1", "0%")
      .attr("y1", "0%")
      .attr("x2", "100%")
      .attr("y2", "0%");
      
    pathGradient.append("stop")
      .attr("offset", "0%")
      .attr("stop-color", "#7B2CBF");
      
    pathGradient.append("stop")
      .attr("offset", "100%")
      .attr("stop-color", "#9D4EDD");
    
    // –°–æ–∑–¥–∞–µ–º –ø—É—Ç—å –∫–ª–∏–µ–Ω—Ç–∞
    const journeyGroup = group.append("g")
      .attr("transform", `translate(${-width/2.5}, 0)`);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ª–∏–Ω–∏—é –ø—É—Ç–∏
    const journeyWidth = width * 0.7;
    const pathData = `M0,0 C${journeyWidth * 0.2},${-height * 0.15} ${journeyWidth * 0.4},${height * 0.15} ${journeyWidth * 0.6},${-height * 0.1} S${journeyWidth * 0.8},${height * 0.1} ${journeyWidth},0`;
    
    const path = journeyGroup.append("path")
      .attr("d", pathData)
      .attr("fill", "none")
      .attr("stroke", "url(#pathGradient)")
      .attr("stroke-width", 5)
      .attr("opacity", 0.7)
      .attr("stroke-dasharray", `${journeyWidth * 2}`)
      .attr("stroke-dashoffset", `${journeyWidth * 2}`);
      
    // –ê–Ω–∏–º–∞—Ü–∏—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è –ø—É—Ç–∏
    path.transition()
      .duration(3000)
      .attr("stroke-dashoffset", 0);
      
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–æ—á–∫–∏ –Ω–∞ –ø—É—Ç–∏ –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è —à–∞–≥–æ–≤
    const pathNode = path.node();
    const pathLength = pathNode ? pathNode.getTotalLength() : journeyWidth * 1.5;
    
    const journeySteps = [
      { label: "–ü–µ—Ä–≤—ã–π –∫–æ–Ω—Ç–∞–∫—Ç", icon: "üëã", position: 0 },
      { label: "–ü–æ–¥–±–æ—Ä –∞–≤—Ç–æ", icon: "üîç", position: 0.25 },
      { label: "–¢–µ—Å—Ç-–¥—Ä–∞–π–≤", icon: "üöó", position: 0.5 },
      { label: "–°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ", icon: "‚úÖ", position: 0.75 },
      { label: "–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ", icon: "üéâ", position: 1 }
    ];
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ—á–∫–∏ –Ω–∞ –ø—É—Ç—å —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º–∏ –∑–∞–¥–µ—Ä–∂–∫–∞–º–∏
    journeySteps.forEach((step, i) => {
      const pos = pathNode ? pathNode.getPointAtLength(pathLength * step.position) : { x: journeyWidth * step.position, y: 0 };
      
      // –£–≤–µ–ª–∏—á–µ–Ω–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∫–∞–∂–¥–æ–π —Ç–æ—á–∫–∏
      const delay = 3500 / journeySteps.length * i + 3000;
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∫—Ä—É–≥ —Å –∏–∫–æ–Ω–∫–æ–π
      const stepGroup = journeyGroup.append("g")
        .attr("transform", `translate(${pos.x}, ${pos.y})`)
        .attr("opacity", 0);
        
      stepGroup.append("circle")
        .attr("r", 18)
        .attr("fill", "white")
        .attr("stroke", "#7B2CBF")
        .attr("stroke-width", 2);
        
      stepGroup.append("text")
        .attr("text-anchor", "middle")
        .attr("dominant-baseline", "central")
        .attr("font-size", "16px")
        .text(step.icon);
        
      stepGroup.append("text")
        .attr("y", 30)
        .attr("text-anchor", "middle")
        .attr("font-size", "12px")
        .attr("fill", "#666")
        .text(step.label);
        
      // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º–∏ —Ç–∞–π–º-–∞—É—Ç–∞–º–∏
      stepGroup.transition()
        .delay(delay)
        .duration(600)
        .attr("opacity", 1)
        .transition()
        .duration(600)
        .attr("transform", `translate(${pos.x}, ${pos.y - 5})`)
        .transition()
        .duration(600)
        .attr("transform", `translate(${pos.x}, ${pos.y})`);
    });
    
    // –î–≤–∏–∂—É—â–∏–π—Å—è –∞–≤—Ç–æ–º–æ–±–∏–ª—å –ø–æ –ø—É—Ç–∏
    const car = journeyGroup.append("text")
      .attr("text-anchor", "middle")
      .attr("dominant-baseline", "central")
      .attr("font-size", "20px")
      .text("üöó")
      .attr("opacity", 0);
      
    // –ê–Ω–∏–º–∞—Ü–∏—è –¥–≤–∏–∂–µ–Ω–∏—è –∞–≤—Ç–æ–º–æ–±–∏–ª—è –ø–æ –ø—É—Ç–∏ —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º–∏ —Ç–∞–π–º-–∞—É—Ç–∞–º–∏
    car.transition()
      .delay(3500) // –£–≤–µ–ª–∏—á–µ–Ω–æ
      .duration(600)
      .attr("opacity", 1)
      .transition()
      .duration(5000) // –£–≤–µ–ª–∏—á–µ–Ω–æ
      .attrTween("transform", function() {
        return function(t) {
          const p = pathNode ? pathNode.getPointAtLength(pathLength * t) : { x: journeyWidth * t, y: 0 };
          // –í—ã—á–∏—Å–ª—è–µ–º —É–≥–æ–ª –¥–ª—è –ø–æ–≤–æ—Ä–æ—Ç–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –≤ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –¥–≤–∏–∂–µ–Ω–∏—è
          let angle = 0;
          if (pathNode && t < 0.99) {
            const p2 = pathNode.getPointAtLength(pathLength * (t + 0.01));
            angle = Math.atan2(p2.y - p.y, p2.x - p.x) * 180 / Math.PI;
          }
          return `translate(${p.x}, ${p.y}) rotate(${angle})`;
        };
      });
  };
  
  const renderDocsVisualization = (group, width, height, defs) => {
    // –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã
    group.attr("transform", `translate(${width/2}, ${height/2})`);
    
    // –°–æ–∑–¥–∞–µ–º —Ñ–æ–Ω–æ–≤—É—é "–¥–æ—Å–∫—É"
    group.append("rect")
      .attr("x", -width/2 + 20)
      .attr("y", -height/2 + 20)
      .attr("width", width - 40)
      .attr("height", height - 40)
      .attr("rx", 10)
      .attr("fill", "#f9f9f9")
      .attr("stroke", "#e0e0e0")
      .attr("stroke-width", 1);
    
    // –°–æ–∑–¥–∞–µ–º —Å—Ç–æ–ø–∫—É –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ —Ü–µ–Ω—Ç—Ä–µ
    const docsGroup = group.append("g")
      .attr("transform", `translate(${-60}, ${-70})`);
      
    // –°–æ–∑–¥–∞–µ–º —Å—Ç–æ–ø–∫—É –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º–∏ –∑–∞–¥–µ—Ä–∂–∫–∞–º–∏
    for (let i = 0; i < 5; i++) {
      const delay = i * 800; // –£–≤–µ–ª–∏—á–µ–Ω–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
      const doc = docsGroup.append("g")
        .attr("transform", `translate(${i * 5}, ${i * 7})`)
        .attr("opacity", 0);
        
   doc.append("rect")
        .attr("width", 90)
        .attr("height", 110)
        .attr("rx", 3)
        .attr("fill", "white")
        .attr("stroke", "#7B2CBF")
        .attr("stroke-width", 1.5);
        
      // –õ–∏–Ω–∏–∏ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–µ
      for (let j = 0; j < 5; j++) {
        doc.append("line")
          .attr("x1", 10)
          .attr("y1", 20 + j * 15)
          .attr("x2", 80)
          .attr("y2", 20 + j * 15)
          .attr("stroke", "#ccc")
          .attr("stroke-width", 2);
      }
      
      // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞
      doc.append("rect")
        .attr("x", 10)
        .attr("y", 5)
        .attr("width", 50)
        .attr("height", 8)
        .attr("fill", "#7B2CBF")
        .attr("opacity", 0.7);
        
      // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞ —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º–∏ —Ç–∞–π–º-–∞—É—Ç–∞–º–∏
      doc.transition()
        .delay(delay)
        .duration(800)
        .attr("opacity", 1)
        .attr("transform", `translate(${i * 5}, ${i * 7 - 10})`)
        .transition()
        .duration(400)
        .attr("transform", `translate(${i * 5}, ${i * 7})`);
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º —à—Ç–∞–º–ø "–ü–æ–¥–ø–∏—Å–∞–Ω–æ"
    const stamp = docsGroup.append("g")
      .attr("transform", `translate(15, 40)`)
      .attr("opacity", 0);
      
    stamp.append("circle")
      .attr("r", 25)
      .attr("fill", "none")
      .attr("stroke", "#7B2CBF")
      .attr("stroke-width", 2)
      .attr("stroke-dasharray", "5,3");
      
    stamp.append("text")
      .attr("text-anchor", "middle")
      .attr("dominant-baseline", "central")
      .attr("font-size", "10px")
      .attr("fill", "#7B2CBF")
      .attr("font-weight", "bold")
      .attr("transform", "rotate(-25)")
      .text("–ü–û–î–ü–ò–°–ê–ù–û");
      
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è –∏ –≤—Ä–∞—â–µ–Ω–∏—è —à—Ç–∞–º–ø–∞ —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º–∏ —Ç–∞–π–º-–∞—É—Ç–∞–º–∏
    stamp.transition()
      .delay(4000) // –£–≤–µ–ª–∏—á–µ–Ω–æ
      .duration(1200)
      .attr("opacity", 1)
      .attr("transform", "translate(45, 40) rotate(0)")
      .transition()
      .duration(800)
      .attr("transform", "translate(45, 40) rotate(-25)");
      
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å–∏
    const signature = docsGroup.append("g")
      .attr("transform", `translate(25, 80)`)
      .attr("opacity", 0);
      
    // –°–æ–∑–¥–∞–µ–º –ø—É—Ç—å –ø–æ–¥–ø–∏—Å–∏
    const signaturePath = signature.append("path")
      .attr("d", "M0,0 C5,-5 10,5 15,0 S25,-5 30,0 S40,5 45,0")
      .attr("fill", "none")
      .attr("stroke", "#7B2CBF")
      .attr("stroke-width", 2)
      .attr("stroke-dasharray", "100")
      .attr("stroke-dashoffset", "100");
      
    // –ê–Ω–∏–º–∞—Ü–∏—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∏ —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º–∏ —Ç–∞–π–º-–∞—É—Ç–∞–º–∏
    signature.transition()
      .delay(4500) // –£–≤–µ–ª–∏—á–µ–Ω–æ
      .duration(800)
      .attr("opacity", 1);
      
    signaturePath.transition()
      .delay(4500) // –£–≤–µ–ª–∏—á–µ–Ω–æ
      .duration(2000) // –£–≤–µ–ª–∏—á–µ–Ω–æ
      .attr("stroke-dashoffset", "0");
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä—Å–æ–Ω—É —Å–ø—Ä–∞–≤–∞ (—ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ–¥–ø–∏—Å—å)
    const person = group.append("g")
      .attr("transform", `translate(${width/4}, 0)`)
      .attr("opacity", 0);
    
    // –°–∏–ª—É—ç—Ç –ø–µ—Ä—Å–æ–Ω—ã
    person.append("circle")
      .attr("r", 20)
      .attr("fill", "#7B2CBF")
      .attr("opacity", 0.7);
      
    person.append("circle")
      .attr("cy", -40)
      .attr("r", 15)
      .attr("fill", "#7B2CBF")
      .attr("opacity", 0.7);
      
    // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –¥–ª—è –ø–æ–¥–ø–∏—Å–∏
    person.append("rect")
      .attr("x", -35)
      .attr("y", -10)
      .attr("width", 25)
      .attr("height", 15)
      .attr("rx", 2)
      .attr("fill", "#ddd")
      .attr("stroke", "#999")
      .attr("stroke-width", 1);
    
    // –≠–∫—Ä–∞–Ω —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    person.append("rect")
      .attr("x", -32)
      .attr("y", -7)
      .attr("width", 19)
      .attr("height", 9)
      .attr("fill", "#7B2CBF")
      .attr("opacity", 0.3);
    
    // –¢–µ–∫—Å—Ç "E-Sign"
    person.append("text")
      .attr("x", -22)
      .attr("y", 20)
      .attr("text-anchor", "middle")
      .attr("font-size", "10px")
      .attr("fill", "#666")
      .text("E-Sign");
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω—ã
    person.transition()
      .delay(3000) // –£–≤–µ–ª–∏—á–µ–Ω–æ
      .duration(1200)
      .attr("opacity", 1);
    
    // –ê–Ω–∏–º–∞—Ü–∏—è "–æ—Ç–ø—Ä–∞–≤–∫–∏" –¥–æ–∫—É–º–µ–Ω—Ç–∞ –æ—Ç –ø–µ—Ä—Å–æ–Ω—ã –∫ —Å—Ç–æ–ø–∫–µ
    const envelope = group.append("text")
      .attr("x", width/4 - 20)
      .attr("y", 0)
      .attr("font-size", "20px")
      .text("‚úâÔ∏è")
      .attr("opacity", 0);
      
    // –ê–Ω–∏–º–∞—Ü–∏—è –¥–≤–∏–∂–µ–Ω–∏—è –∫–æ–Ω–≤–µ—Ä—Ç–∞
    envelope.transition()
      .delay(5500) // –£–≤–µ–ª–∏—á–µ–Ω–æ
      .duration(500)
      .attr("opacity", 1)
      .transition()
      .duration(2000) // –£–≤–µ–ª–∏—á–µ–Ω–æ
      .attr("x", -30)
      .attr("y", -30)
      .transition()
      .duration(500)
      .attr("opacity", 0);
  };
  
  const handleStepClick = (index) => {
    setActiveStep(index);
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –±–æ–ª–µ–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è
    setIsPlaying(false);
    setTimeout(() => setIsPlaying(true), 20000); // –£–≤–µ–ª–∏—á–µ–Ω–æ —Å 10000 –¥–æ 20000
  };
  
  return (
    <section 
      className="py-16 px-4 bg-gradient-to-b from-white to-gray-50 dark:from-gray-900 dark:to-gray-800 overflow-hidden"
      ref={containerRef}
    >
      <div className="container mx-auto">
        <motion.div 
          className="text-center mb-12"
          initial={{ opacity: 0, y: -20 }}
          animate={isInView ? { opacity: 1, y: 0 } : { opacity: 0, y: -20 }}
          transition={{ duration: 0.6 }}
        >
          <h2 className="text-3xl sm:text-4xl font-bold text-gray-900 dark:text-white mb-4">
            –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞—à–∞ —Å–∏—Å—Ç–µ–º–∞
          </h2>
          <p className="text-gray-600 dark:text-gray-300 max-w-2xl mx-auto">
            –ü–æ–ª–Ω–æ—Å—Ç—å—é –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å –æ—Ç –∏–º–ø–æ—Ä—Ç–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏
          </p>
        </motion.div>
        
        <div className="relative mx-auto">
          {/* –ü–ª–∞–≤–∞—é—â–∏–µ —á–∞—Å—Ç–∏—Ü—ã –¥–ª—è —Ñ–æ–Ω–∞ */}
          <div className="absolute inset-0 -z-10">
            <div className="absolute top-10 left-10 w-16 h-16 bg-primary/10 rounded-full animate-float"></div>
            <div className="absolute bottom-20 right-20 w-20 h-20 bg-primary/5 rounded-full animate-float-delay"></div>
            <div className="absolute top-1/2 right-1/3 w-12 h-12 bg-accent/10 rounded-full animate-float-slow"></div>
          </div>
          
          {/* –°—Ç–µ–ø–ø–µ—Ä —Å –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–π –ª–∏–Ω–∏–µ–π –∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–º –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ */}
          <div className="relative mb-12">
            <div className="absolute top-1/2 left-4 right-4 h-1 bg-gray-200 dark:bg-gray-700 rounded-full -translate-y-1/2">
              <motion.div 
                className="h-full bg-primary rounded-full"
                initial={{ width: '0%' }}
                animate={{ width: `${(activeStep + 1) * 100 / steps.length}%` }}
                transition={{ duration: 0.5 }}
              ></motion.div>
            </div>
            
            <div className="grid grid-cols-2 md:grid-cols-4 gap-4 relative z-10">
              {steps.map((step, index) => (
                <motion.button
                  key={index}
                  className={`flex flex-col items-center pt-8 pb-4 px-2 relative`}
                  whileHover={{ scale: 1.05 }}
                  onClick={() => handleStepClick(index)}
                >
                  <div 
                    className={`w-16 h-16 rounded-full flex items-center justify-center text-2xl mb-3 shadow-lg ${
                      index === activeStep 
                        ? 'bg-gradient-to-br from-primary to-primary-dark text-white'
                        : 'bg-white dark:bg-gray-800 text-primary dark:text-primary-light border border-gray-200 dark:border-gray-700'
                    }`}
                  >
                    <span className="text-2xl">{step.icon}</span>
                    <motion.div 
                      className="absolute -top-2 -right-2 w-6 h-6 bg-primary rounded-full flex items-center justify-center text-white text-xs font-bold"
                      animate={{ 
                        scale: index === activeStep ? [1, 1.2, 1] : 1,
                      }}
                      transition={{ 
                        duration: 0.6, 
                        repeat: index === activeStep ? Infinity : 0,
                        repeatDelay: 1
                      }}
                    >
                      {index + 1}
                    </motion.div>
                  </div>
                  
                  <h3 className={`text-base font-semibold text-center ${
                    index === activeStep 
                      ? 'text-primary dark:text-primary-light' 
                      : 'text-gray-700 dark:text-gray-300'
                  }`}>
                    {step.title}
                  </h3>
                  
                  <span className="text-xs text-gray-500 dark:text-gray-400 text-center line-clamp-2 mt-1">
                    {step.description}
                  </span>
                </motion.button>
              ))}
            </div>
          </div>
          
          {/* –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —à–∞–≥–µ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π */}
          <div className="grid grid-cols-1 md:grid-cols-2 gap-8 items-start">
            {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
            <AnimatePresence mode="wait">
              <motion.div 
                key={activeStep}
                initial={{ opacity: 0, x: -20 }}
                animate={{ opacity: 1, x: 0 }}
                exit={{ opacity: 0, x: 20 }}
                transition={{ duration: 0.5 }}
                className="bg-white dark:bg-gray-800 rounded-2xl shadow-xl p-6 md:p-8 border border-gray-100 dark:border-gray-700"
              >
                <div className="flex items-center gap-4 mb-6">
                  <div className="w-14 h-14 rounded-full bg-primary-light/20 dark:bg-primary-dark/30 flex items-center justify-center text-2xl">
                    {steps[activeStep].icon}
                  </div>
                  <div>
                    <h3 className="text-xl font-bold text-gray-900 dark:text-white">
                      {steps[activeStep].title}
                    </h3>
                    <p className="text-gray-500 dark:text-gray-400 text-sm">
                      –≠—Ç–∞–ø {activeStep + 1} –∏–∑ {steps.length}
                    </p>
                  </div>
                </div>
                
                <p className="text-gray-700 dark:text-gray-300 mb-6">
                  {steps[activeStep].description}
                </p>
                
                <div className="space-y-6">
                  <div>
                    <h4 className="text-base font-semibold text-gray-800 dark:text-gray-200 mb-3 flex items-center">
                      <span className="w-6 h-6 rounded-full bg-primary-light/20 dark:bg-primary-dark/30 flex items-center justify-center text-primary text-sm mr-2">
                        <svg xmlns="http://www.w3.org/2000/svg" className="h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
                          <path fillRule="evenodd" d="M6.267 3.455a3.066 3.066 0 001.745-.723 3.066 3.066 0 013.976 0 3.066 3.066 0 001.745.723 3.066 3.066 0 012.812 2.812c.051.643.304 1.254.723 1.745a3.066 3.066 0 010 3.976 3.066 3.066 0 00-.723 1.745 3.066 3.066 0 01-2.812 2.812 3.066 3.066 0 00-1.745.723 3.066 3.066 0 01-3.976 0 3.066 3.066 0 00-1.745-.723 3.066 3.066 0 01-2.812-2.812 3.066 3.066 0 00-.723-1.745 3.066 3.066 0 010-3.976 3.066 3.066 0 00.723-1.745 3.066 3.066 0 012.812-2.812zm7.44 5.252a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
                        </svg>
                      </span>
                      –ö–ª—é—á–µ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
                    </h4>
                    
                    <ul className="space-y-2">
                      {steps[activeStep].features.map((feature, idx) => (
                        <motion.li 
                          key={idx}
                          initial={{ opacity: 0, x: -10 }}
                          animate={{ opacity: 1, x: 0 }}
                          transition={{ duration: 0.3, delay: idx * 0.1 }}
                          className="flex items-start"
                        >
                          <span className="text-primary dark:text-primary-light mr-2 mt-0.5">‚úì</span>
                          <span className="text-gray-700 dark:text-gray-300 text-sm">{feature}</span>
                        </motion.li>
                      ))}
                    </ul>
                  </div>
                  
                  <div>
                    <h4 className="text-base font-semibold text-gray-800 dark:text-gray-200 mb-3 flex items-center">
                      <span className="w-6 h-6 rounded-full bg-primary-light/20 dark:bg-primary-dark/30 flex items-center justify-center text-primary text-sm mr-2">
                        <svg xmlns="http://www.w3.org/2000/svg" className="h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
                          <path fillRule="evenodd" d="M12 7a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0V8.414l-4.293 4.293a1 1 0 01-1.414 0L8 10.414l-4.293 4.293a1 1 0 01-1.414-1.414l5-5a1 1 0 011.414 0L11 10.586 14.586 7H12z" clipRule="evenodd" />
                        </svg>
                      </span>
                      –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è –±–∏–∑–Ω–µ—Å–∞
                    </h4>
                    
                    <ul className="space-y-2">
                      {steps[activeStep].benefits.map((benefit, idx) => (
                        <motion.li 
                          key={idx}
                          initial={{ opacity: 0, x: -10 }}
                          animate={{ opacity: 1, x: 0 }}
                          transition={{ duration: 0.3, delay: idx * 0.1 + 0.3 }}
                          className="flex items-start"
                        >
                          <span className="text-green-500 dark:text-green-400 mr-2 mt-0.5">‚û§</span>
                          <span className="text-gray-700 dark:text-gray-300 text-sm">{benefit}</span>
                        </motion.li>
                      ))}
                    </ul>
                  </div>
                </div>
                
                <div className="mt-8 flex justify-between items-center">
                  <motion.button
                    whileHover={{ scale: 1.05 }}
                    whileTap={{ scale: 0.95 }}
                    className={`px-4 py-2 rounded-full text-sm font-medium transition-colors ${
                      activeStep === 0 
                        ? 'bg-gray-100 dark:bg-gray-700 text-gray-400 cursor-not-allowed' 
                        : 'bg-white dark:bg-gray-700 text-primary border border-primary hover:bg-primary/5'
                    }`}
                    onClick={() => activeStep > 0 && handleStepClick(activeStep - 1)}
                    disabled={activeStep === 0}
                  >
                    ‚Üê –ü—Ä–µ–¥—ã–¥—É—â–∏–π
                  </motion.button>
                  
                  <motion.button
                    whileHover={{ scale: 1.05 }}
                    whileTap={{ scale: 0.95 }}
                    className={`px-4 py-2 rounded-full text-sm font-medium transition-colors ${
                      activeStep === steps.length - 1 
                        ? 'bg-gray-100 dark:bg-gray-700 text-gray-400 cursor-not-allowed' 
                        : 'bg-primary text-white hover:bg-primary-dark'
                    }`}
                    onClick={() => activeStep < steps.length - 1 && handleStepClick(activeStep + 1)}
                    disabled={activeStep === steps.length - 1}
                  >
                    –°–ª–µ–¥—É—é—â–∏–π ‚Üí
                  </motion.button>
                </div>
              </motion.div>
            </AnimatePresence>
            
            {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - —É–ª—É—á—à–µ–Ω–Ω–∞—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è */}
            <div className="bg-white dark:bg-gray-800 rounded-2xl shadow-lg border border-gray-100 dark:border-gray-700 overflow-hidden h-[400px] relative">
              {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ */}
              <div className="bg-gradient-to-r from-primary/10 to-primary-light/10 dark:from-primary/20 dark:to-primary-light/20 p-3 border-b border-gray-100 dark:border-gray-700">
                <h4 className="text-sm font-medium text-gray-700 dark:text-gray-300 text-center">
                  –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
                </h4>
              </div>
              
              {/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è D3 –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ */}
              <div id="process-visualization" className="w-full h-[350px] p-4"></div>
              
              {/* –§–æ–ª–±–µ–∫/–ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä, –µ—Å–ª–∏ D3 –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ */}
              <AnimatePresence>
                {!isD3Ready && (
                  <motion.div 
                    initial={{ opacity: 0 }}
                    animate={{ opacity: 1 }}
                    exit={{ opacity: 0 }}
                    className="absolute inset-0 bg-white dark:bg-gray-800 flex flex-col items-center justify-center p-6 z-10"
                  >
                    <div className="w-16 h-16 rounded-full bg-primary-light/20 flex items-center justify-center text-2xl mb-4">
                      {steps[activeStep].icon}
                    </div>
                    <div className="text-center max-w-xs">
                      <h3 className="font-medium text-gray-900 dark:text-white mb-2">
                        {steps[activeStep].title}
                      </h3>
                      <p className="text-sm text-gray-600 dark:text-gray-400">
                        {steps[activeStep].description}
                      </p>
                    </div>
                  </motion.div>
                )}
              </AnimatePresence>
            </div>
          </div>
          
          {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ */}
          <div className="flex justify-center mt-8 md:hidden">
            {steps.map((_, idx) => (
              <button
                key={idx}
                className={`w-2 h-2 mx-1 rounded-full ${
                  idx === activeStep ? 'bg-primary' : 'bg-gray-300 dark:bg-gray-600'
                }`}
                onClick={() => handleStepClick(idx)}
              />
            ))}
          </div>
          
          {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è CTA —Å–µ–∫—Ü–∏—è */}
          <motion.div 
            className="mt-16 text-center"
            initial={{ opacity: 0, y: 20 }}
            animate={isInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
            transition={{ duration: 0.6, delay: 0.4 }}
          >
            <h3 className="text-xl font-bold text-gray-900 dark:text-white mb-4">
              –ì–æ—Ç–æ–≤—ã –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–¥–∞–∂–∏ –≤ –≤–∞—à–µ–º –∞–≤—Ç–æ—Å–∞–ª–æ–Ω–µ?
            </h3>
            <p className="text-gray-600 dark:text-gray-300 mb-8 max-w-2xl mx-auto">
              –ë–æ–ª–µ–µ 200 –∞–≤—Ç–æ–¥–∏–ª–µ—Ä–æ–≤ —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –Ω–∞—à—É —Å–∏—Å—Ç–µ–º—É –∏ —É–≤–µ–ª–∏—á–∏–ª–∏ –ø—Ä–æ–¥–∞–∂–∏ –≤ —Å—Ä–µ–¥–Ω–µ–º –Ω–∞ 35%.
            </p>
            
            <div className="flex flex-col sm:flex-row justify-center gap-4">
              <motion.button
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                className="px-8 py-3 bg-primary hover:bg-primary-dark text-white font-medium rounded-full transition-colors shadow-lg"
              >
                –ó–∞–ø—Ä–æ—Å–∏—Ç—å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é
              </motion.button>
              
              <motion.button
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                className="px-8 py-3 bg-white dark:bg-gray-800 text-primary dark:text-primary-light border border-primary dark:border-primary-light hover:bg-primary/5 dark:hover:bg-primary-dark/10 font-medium rounded-full transition-colors"
              >
                –£–∑–Ω–∞—Ç—å —Ü–µ–Ω—ã
              </motion.button>
            </div>
          </motion.div>
        </div>
      </div>
      
      {/* CSS –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π */}
      <style jsx>{`
        @keyframes float {
          0% { transform: translateY(0px); }
          50% { transform: translateY(-10px); }
          100% { transform: translateY(0px); }
        }
        
        .animate-float {
          animation: float 4s ease-in-out infinite;
        }
        
        .animate-float-delay {
          animation: float 5s ease-in-out 1s infinite;
        }
        
        .animate-float-slow {
          animation: float 6s ease-in-out 2s infinite;
        }
        
        .line-clamp-2 {
          display: -webkit-box;
          -webkit-line-clamp: 2;
          -webkit-box-orient: vertical;
          overflow: hidden;
        }
      `}</style>
    </section>
  );
};