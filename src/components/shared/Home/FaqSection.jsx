'use client';

import { useState, useRef, useEffect } from "react";
import { motion, AnimatePresence, useInView, useMotionValue } from 'framer-motion';

export const FaqSection = () => {
  const [openIndex, setOpenIndex] = useState(null);
  const [searchQuery, setSearchQuery] = useState('');
  const [filteredFaqs, setFilteredFaqs] = useState([]);
  const [activeCategory, setActiveCategory] = useState('all');
  const [isSearching, setIsSearching] = useState(false);
  const sectionRef = useRef(null);
  const isInView = useInView(sectionRef, { once: false, amount: 0.2 });
  
  // –î–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫—É—Ä—Å–æ—Ä–∞
  const cursorX = useMotionValue(0);
  const cursorY = useMotionValue(0);
  const cursorSize = useMotionValue(20);
  
  // –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ FAQ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –∏ –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏
  const faqData = [
    {
      question: "–ö–∞–∫ –±—ã—Å—Ç—Ä–æ –º–æ–∂–Ω–æ –≤–Ω–µ–¥—Ä–∏—Ç—å —Å–∏—Å—Ç–µ–º—É?",
      answer: "–ë–∞–∑–æ–≤–æ–µ –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ –∑–∞–Ω–∏–º–∞–µ—Ç –æ—Ç 2 –¥–æ 4 –Ω–µ–¥–µ–ª—å, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–∞–∑–º–µ—Ä–∞ –∫–æ–º–ø–∞–Ω–∏–∏ –∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π. –ú—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ–ª–Ω–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –Ω–∞ –≤—Å–µ—Ö —ç—Ç–∞–ø–∞—Ö –≤–Ω–µ–¥—Ä–µ–Ω–∏—è, –≤–∫–ª—é—á–∞—è –æ–±—É—á–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞.",
      category: "–í–Ω–µ–¥—Ä–µ–Ω–∏–µ",
      icon: "‚è±Ô∏è",
      popularityScore: 98,
      keywords: ["–≤–Ω–µ–¥—Ä–µ–Ω–∏–µ", "—Å—Ä–æ–∫–∏", "–æ–±—É—á–µ–Ω–∏–µ", "–∑–∞–ø—É—Å–∫"],
      expandedContent: {
        steps: [
          { name: "–ê–Ω–∞–ª–∏–∑ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤", duration: "3-5 –¥–Ω–µ–π" },
          { name: "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã", duration: "7-10 –¥–Ω–µ–π" },
          { name: "–û–±—É—á–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞", duration: "2-5 –¥–Ω–µ–π" },
          { name: "–¢–µ—Å—Ç–æ–≤–∞—è —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏—è", duration: "5-7 –¥–Ω–µ–π" },
          { name: "–ó–∞–ø—É—Å–∫ –≤ —Ä–∞–±–æ—Ç—É", duration: "1-2 –¥–Ω—è" }
        ],
        note: "–ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ —Å –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ–º –º—ã –ø—Ä–æ–≤–æ–¥–∏–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å –≤–∞—à–∏–º–∏ —Ç–µ–∫—É—â–∏–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏ –±–µ–∑ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è —Ä–∞–±–æ—á–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤."
      }
    },
    {
      question: "–ö–∞–∫–∞—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è?",
      answer: "–ú—ã –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ–º –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω—É—é —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É 24/7 –ø–æ –≤—Å–µ–º –∫–∞–Ω–∞–ª–∞–º —Å–≤—è–∑–∏: —Ç–µ–ª–µ—Ñ–æ–Ω, email, —á–∞—Ç. –í—Ä–µ–º—è —Ä–µ–∞–∫—Ü–∏–∏ –Ω–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∏–Ω—Ü–∏–¥–µ–Ω—Ç—ã —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –Ω–µ –±–æ–ª–µ–µ 15 –º–∏–Ω—É—Ç. –¢–∞–∫–∂–µ –¥–æ—Å—Ç—É–ø–Ω—ã —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞.",
      category: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞",
      icon: "üõ†Ô∏è",
      popularityScore: 87,
      keywords: ["–ø–æ–¥–¥–µ—Ä–∂–∫–∞", "—Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞", "–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è", "–∏–Ω—Ü–∏–¥–µ–Ω—Ç—ã"],
      expandedContent: {
        supportLevels: [
          { level: "–ë–∞–∑–æ–≤—ã–π", responseTime: "24 —á–∞—Å–∞", availability: "–†–∞–±–æ—á–∏–µ –¥–Ω–∏ 9-18" },
          { level: "–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π", responseTime: "4 —á–∞—Å–∞", availability: "–ï–∂–µ–¥–Ω–µ–≤–Ω–æ 8-22" },
          { level: "–ü—Ä–µ–º–∏—É–º", responseTime: "15 –º–∏–Ω—É—Ç", availability: "24/7/365" }
        ],
        channels: ["–¢–µ–ª–µ—Ñ–æ–Ω –≥–æ—Ä—è—á–µ–π –ª–∏–Ω–∏–∏", "Email", "–ß–∞—Ç –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏", "–í—ã–¥–µ–ª–µ–Ω–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä"]
      }
    },
    {
      question: "–ú–æ–∂–Ω–æ –ª–∏ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É —Å –Ω–∞—à–∏–º —Ç–µ–∫—É—â–∏–º –ü–û?",
      answer: "–î–∞, –Ω–∞—à–∞ —Å–∏—Å—Ç–µ–º–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –±–∏–∑–Ω–µ—Å-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π —á–µ—Ä–µ–∑ API. –ú—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∫–æ–Ω–Ω–µ–∫—Ç–æ—Ä—ã –¥–ª—è —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏—Ö —Ä–µ—à–µ–Ω–∏–π, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –≤ –≤–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏.",
      category: "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏",
      icon: "üîÑ",
      popularityScore: 95,
      keywords: ["–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è", "API", "–∫–æ–Ω–Ω–µ–∫—Ç–æ—Ä—ã", "—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è"],
      expandedContent: {
        supportedSystems: [
          { name: "1C:–ü—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ", integration: "–ü–æ–ª–Ω–∞—è –¥–≤—É—Å—Ç–æ—Ä–æ–Ω–Ω—è—è" },
          { name: "SAP", integration: "–ü–æ–ª–Ω–∞—è –¥–≤—É—Å—Ç–æ—Ä–æ–Ω–Ω—è—è" },
          { name: "–ë–∏—Ç—Ä–∏–∫—Å24", integration: "–ü–æ–ª–Ω–∞—è –¥–≤—É—Å—Ç–æ—Ä–æ–Ω–Ω—è—è" },
          { name: "AmoCRM", integration: "–ü–æ–ª–Ω–∞—è –¥–≤—É—Å—Ç–æ—Ä–æ–Ω–Ω—è—è" },
          { name: "MS Dynamics", integration: "–ü–æ–ª–Ω–∞—è –¥–≤—É—Å—Ç–æ—Ä–æ–Ω–Ω—è—è" },
          { name: "–î—Ä—É–≥–æ–µ –ü–û", integration: "–ß–µ—Ä–µ–∑ REST API" }
        ],
        diagram: "integration-diagram.svg"
      }
    },
    {
      question: "–ö–∞–∫ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç—Å—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö?",
      answer: "–ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ –≤—Å–µ—Ö —É—Ä–æ–≤–Ω—è—Ö, –º–Ω–æ–≥–æ—Ñ–∞–∫—Ç–æ—Ä–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é, —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –∞—É–¥–∏—Ç—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –æ –∑–∞—â–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö. –í—Å–µ –¥–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö –¥–∞—Ç–∞-—Ü–µ–Ω—Ç—Ä–∞—Ö —Å —Ä–µ–∑–µ—Ä–≤–Ω—ã–º –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ–º.",
      category: "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å",
      icon: "üîí",
      popularityScore: 92,
      keywords: ["–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å", "—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ", "–∑–∞—â–∏—Ç–∞", "–¥–∞–Ω–Ω—ã–µ", "–ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ"],
      expandedContent: {
        securityMeasures: [
          "–®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ AES-256 –¥–ª—è –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –ø–æ–∫–æ–µ –∏ –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ",
          "–ú–Ω–æ–≥–æ—Ñ–∞–∫—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
          "–î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –¥–µ–π—Å—Ç–≤–∏–π –≤ —Å–∏—Å—Ç–µ–º–µ",
          "–†–µ–≥—É–ª—è—Ä–Ω—ã–µ –ø–µ–Ω—Ç–µ—Å—Ç—ã –∏ –∞—É–¥–∏—Ç—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
          "–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º 152-–§–ó"
        ],
        certifications: ["ISO 27001", "PCI DSS", "GDPR Compliant"]
      }
    },
    {
      question: "–ö–∞–∫–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ª–∏—Ü–µ–Ω–∑–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã?",
      answer: "–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≥–∏–±–∫—É—é –º–æ–¥–µ–ª—å –ª–∏—Ü–µ–Ω–∑–∏—Ä–æ–≤–∞–Ω–∏—è: –ø–æ–¥–ø–∏—Å–∫–∞ (–µ–∂–µ–º–µ—Å—è—á–Ω–∞—è –∏–ª–∏ –≥–æ–¥–æ–≤–∞—è) —Å —Ä–∞–∑–Ω—ã–º–∏ —Ç–∞—Ä–∏—Ñ–Ω—ã–º–∏ –ø–ª–∞–Ω–∞–º–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∞ —Ç–∞–∫–∂–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π –ª–∏—Ü–µ–Ω–∑–∏–∏ —Å –ø–æ—Å–ª–µ–¥—É—é—â–µ–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.",
      category: "–õ–∏—Ü–µ–Ω–∑–∏—Ä–æ–≤–∞–Ω–∏–µ",
      icon: "üìú",
      popularityScore: 89,
      keywords: ["–ª–∏—Ü–µ–Ω–∑–∏—è", "–ø–æ–¥–ø–∏—Å–∫–∞", "—Ç–∞—Ä–∏—Ñ—ã", "—Ü–µ–Ω—ã"],
      expandedContent: {
        plans: [
          { name: "–°—Ç–∞—Ä—Ç", users: "–¥–æ 10", price: "–æ—Ç 30 000 ‚ÇΩ/–º–µ—Å" },
          { name: "–ë–∏–∑–Ω–µ—Å", users: "–¥–æ 50", price: "–æ—Ç 90 000 ‚ÇΩ/–º–µ—Å" },
          { name: "–ö–æ—Ä–ø–æ—Ä–∞—Ü–∏—è", users: "–Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ", price: "–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ" }
        ],
        discounts: "–ü—Ä–∏ –≥–æ–¥–æ–≤–æ–π –æ–ø–ª–∞—Ç–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è —Å–∫–∏–¥–∫–∞ 20%. –û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–º —É—á—Ä–µ–∂–¥–µ–Ω–∏—è–º –∏ –Ω–µ–∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è."
      }
    },
    {
      question: "–í–æ–∑–º–æ–∂–Ω–∞ –ª–∏ –¥–æ—Ä–∞–±–æ—Ç–∫–∞ —Å–∏—Å—Ç–µ–º—ã –ø–æ–¥ –Ω–∞—à–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è?",
      answer: "–î–∞, –º—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —É—Å–ª—É–≥–∏ –ø–æ –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã –ø–æ–¥ –≤–∞—à–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å—ã. –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –ø—Ä–æ–≤–µ–¥–µ—Ç –∞–Ω–∞–ª–∏–∑ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –∏ —Ä–µ–∞–ª–∏–∑—É–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–æ—Ä–∞–±–æ—Ç–∫–∏ –≤ –∫—Ä–∞—Ç—á–∞–π—à–∏–µ —Å—Ä–æ–∫–∏.",
      category: "–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª",
      icon: "üõ†Ô∏è",
      popularityScore: 91,
      keywords: ["–¥–æ—Ä–∞–±–æ—Ç–∫–∞", "–∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è", "–Ω–∞—Å—Ç—Ä–æ–π–∫–∞", "–∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ"],
      expandedContent: {
        customizationOptions: [
          "–°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏—Ö –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤",
          "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ –∏ –¥–∞—à–±–æ—Ä–¥–æ–≤",
          "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π",
          "–°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–æ–¥—É–ª–µ–π",
          "–ê–¥–∞–ø—Ç–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø–æ–¥ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —Å—Ç–∏–ª—å"
        ],
        process: "–î–æ—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ –æ–±—Å—É–∂–¥–µ–Ω–∏—è —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è. –ó–∞—Ç–µ–º –º—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –æ—Ü–µ–Ω–∫—É —Å—Ä–æ–∫–æ–≤ –∏ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç. –ü–æ—Å–ª–µ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω—è–µ–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ç–µ—Å–Ω–æ–º –∫–æ–Ω—Ç–∞–∫—Ç–µ —Å –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥–æ–π."
      }
    },
    {
      question: "–ö–∞–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ–±—É—á–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞?",
      answer: "–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Ä–∞–∑–Ω—ã—Ö —É—Ä–æ–≤–Ω–µ–π: –æ—Ç –±–∞–∑–æ–≤—ã—Ö –Ω–∞–≤—ã–∫–æ–≤ –¥–ª—è —Ä—è–¥–æ–≤—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –¥–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –∫—É—Ä—Å–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ —Å–∏—Å—Ç–µ–º—ã. –î–æ—Å—Ç—É–ø–Ω—ã –æ–Ω–ª–∞–π–Ω –∏ –æ—á–Ω—ã–µ —Ç—Ä–µ–Ω–∏–Ω–≥–∏, –∞ —Ç–∞–∫–∂–µ –æ–±—à–∏—Ä–Ω–∞—è –±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π.",
      category: "–í–Ω–µ–¥—Ä–µ–Ω–∏–µ",
      icon: "üéì",
      popularityScore: 85,
      keywords: ["–æ–±—É—á–µ–Ω–∏–µ", "—Ç—Ä–µ–Ω–∏–Ω–≥", "–ø–µ—Ä—Å–æ–Ω–∞–ª", "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"],
      expandedContent: {
        trainingOptions: [
          { type: "–ë–∞–∑–æ–≤—ã–π –æ–Ω–ª–∞–π–Ω-–∫—É—Ä—Å", duration: "2 —á–∞—Å–∞", audience: "–†—è–¥–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏" },
          { type: "–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Ç—Ä–µ–Ω–∏–Ω–≥", duration: "1 –¥–µ–Ω—å", audience: "–ú–µ–Ω–µ–¥–∂–µ—Ä—ã" },
          { type: "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã", duration: "3 –¥–Ω—è", audience: "IT-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã" },
          { type: "–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ", duration: "–ü–æ –∑–∞–ø—Ä–æ—Å—É", audience: "VIP-–∫–ª–∏–µ–Ω—Ç—ã" }
        ],
        materials: ["–í–∏–¥–µ–æ—É—Ä–æ–∫–∏", "–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —Å–∏–º—É–ª—è—Ç–æ—Ä—ã", "–£—á–µ–±–Ω—ã–µ –ø–æ—Å–æ–±–∏—è", "–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π"]
      }
    }
  ];
  
  // –í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const categories = [
    { id: 'all', name: '–í—Å–µ –≤–æ–ø—Ä–æ—Å—ã', icon: 'üìã' },
    ...Array.from(new Set(faqData.map(item => item.category))).map(cat => ({
      id: cat.toLowerCase(),
      name: cat,
      icon: faqData.find(item => item.category === cat)?.icon || '‚ùì'
    }))
  ];
  
  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ –ø—Ä–∏ –≤–≤–æ–¥–µ –≤ –ø–æ–∏—Å–∫
  useEffect(() => {
    if (searchQuery.trim() === '' && activeCategory === 'all') {
      setFilteredFaqs(faqData);
      setIsSearching(false);
      return;
    }
    
    const query = searchQuery.toLowerCase().trim();
    const filtered = faqData.filter(faq => {
      const matchesCategory = activeCategory === 'all' || faq.category.toLowerCase() === activeCategory;
      const matchesQuery = query === '' || 
        faq.question.toLowerCase().includes(query) || 
        faq.answer.toLowerCase().includes(query) ||
        faq.keywords.some(keyword => keyword.toLowerCase().includes(query));
      
      return matchesCategory && matchesQuery;
    });
    
    setFilteredFaqs(filtered);
    setIsSearching(searchQuery.trim() !== '');
  }, [searchQuery, activeCategory]);
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–µ
  useEffect(() => {
    setFilteredFaqs(faqData);
  }, []);
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–≤–∏–∂–µ–Ω–∏—è –º—ã—à–∏ –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫—É—Ä—Å–æ—Ä–∞
  const handleMouseMove = (e) => {
    cursorX.set(e.clientX);
    cursorY.set(e.clientY);
  };
  
  const toggleFaq = (index) => {
    setOpenIndex(openIndex === index ? null : index);
    cursorSize.set(openIndex === index ? 20 : 40);
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º—É —Ä–∞–∑–º–µ—Ä—É —á–µ—Ä–µ–∑ 0.5 —Å–µ–∫
    setTimeout(() => {
      cursorSize.set(20);
    }, 500);
  };
  
  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
  const formatPopularity = (score) => {
    if (score > 95) return '–û—á–µ–Ω—å —á–∞—Å—Ç—ã–π –≤–æ–ø—Ä–æ—Å';
    if (score > 90) return '–ß–∞—Å—Ç—ã–π –≤–æ–ø—Ä–æ—Å';
    if (score > 80) return '–ü–æ–ø—É–ª—è—Ä–Ω—ã–π –≤–æ–ø—Ä–æ—Å';
    return '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –≤–æ–ø—Ä–æ—Å';
  };
  
  return (
    <section 
      className="py-20 px-4 bg-gray-50 dark:bg-gray-900/50 overflow-hidden relative"
      ref={sectionRef}
      onMouseMove={handleMouseMove}
    >
      {/* –ö–∞—Å—Ç–æ–º–Ω—ã–π –∫—É—Ä—Å–æ—Ä */}
      <motion.div
        className="fixed w-5 h-5 rounded-full bg-primary/30 dark:bg-primary/40 pointer-events-none z-50 mix-blend-difference hidden md:block"
        style={{
          top: 0,
          left: 0,
          x: cursorX,
          y: cursorY,
          width: cursorSize,
          height: cursorSize,
          translateX: "-50%",
          translateY: "-50%"
        }}
      />
      
      {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã */}
      <div className="absolute -top-20 -right-20 w-64 h-64 bg-primary/5 dark:bg-primary/10 rounded-full blur-3xl"></div>
      <div className="absolute -bottom-20 -left-20 w-64 h-64 bg-primary/5 dark:bg-primary/10 rounded-full blur-3xl"></div>
      
      <div className="container mx-auto relative z-10">
        <motion.div 
          className="text-center mb-12"
          initial={{ opacity: 0 }}
          whileInView={{ opacity: 1 }}
          viewport={{ once: true }}
        >
          <motion.span
            initial={{ scale: 0 }}
            animate={isInView ? { scale: 1 } : { scale: 0 }}
            transition={{ type: "spring", stiffness: 100, delay: 0.2 }}
            className="inline-block px-4 py-1 bg-primary/10 dark:bg-primary/20 text-primary dark:text-primary-light rounded-full text-sm font-semibold mb-3"
          >
            –ü–û–î–î–ï–†–ñ–ö–ê –ö–õ–ò–ï–ù–¢–û–í
          </motion.span>
          
          <h2 className="text-3xl sm:text-4xl font-bold text-gray-900 dark:text-white mb-4">
            –û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã
          </h2>
          
          <motion.div 
            initial={{ width: 0 }}
            animate={isInView ? { width: "80px" } : { width: 0 }}
            transition={{ duration: 0.8, delay: 0.4 }}
            className="h-1 bg-primary mx-auto rounded-full mb-6"
          />
          
          <motion.p 
            className="text-gray-600 dark:text-gray-300 max-w-2xl mx-auto"
            initial={{ opacity: 0, y: 20 }}
            animate={isInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
            transition={{ duration: 0.6, delay: 0.6 }}
          >
            –ù–∞—à–ª–∏ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —Å–∞–º—ã–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ–¥–∏–ª–µ—Ä–∞–º–∏
          </motion.p>
        </motion.div>
        
        {/* –ü–æ–∏—Å–∫–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ */}
        <motion.div 
          className="relative mb-8 max-w-2xl mx-auto"
          initial={{ opacity: 0, y: 20 }}
          animate={isInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
          transition={{ duration: 0.6, delay: 0.7 }}
        >
          <div className="relative">
            <input 
              type="text" 
              placeholder="–ü–æ–∏—Å–∫ –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º..." 
              value={searchQuery}
              onChange={(e) => setSearchQuery(e.target.value)}
              className="w-full px-5 py-4 pl-12 rounded-xl border border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-300 focus:outline-none focus:ring-2 focus:ring-primary/50 shadow-lg"
            />
            <svg 
              className="absolute left-4 top-4 h-6 w-6 text-gray-400" 
              fill="none" 
              stroke="currentColor" 
              viewBox="0 0 24 24"
            >
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
            </svg>
            
            {searchQuery && (
              <button 
                onClick={() => setSearchQuery('')}
                className="absolute right-4 top-4 text-gray-400 hover:text-gray-600 dark:hover:text-gray-200"
              >
                <svg className="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M6 18L18 6M6 6l12 12" />
                </svg>
              </button>
            )}
          </div>
          
          {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ */}
          {isSearching && (
            <div className="absolute top-full left-0 right-0 mt-2 text-sm text-gray-500 dark:text-gray-400">
              –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: <span className="font-bold text-primary dark:text-primary-light">{filteredFaqs.length}</span>
            </div>
          )}
        </motion.div>
        
        {/* –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
        <motion.div 
          className="flex flex-wrap justify-center gap-2 mb-10"
          initial={{ opacity: 0, y: 20 }}
          animate={isInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
          transition={{ duration: 0.6, delay: 0.8 }}
        >
          {categories.map((category) => (
            <motion.button
              key={category.id}
              onClick={() => setActiveCategory(category.id)}
              className={`px-4 py-2 rounded-full text-sm font-medium transition-all ${
                activeCategory === category.id 
                  ? 'bg-primary text-white shadow-lg' 
                  : 'bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'
              }`}
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
            >
              <span className="mr-2">{category.icon}</span>
              {category.name}
            </motion.button>
          ))}
        </motion.div>
        
        {/* –°–ø–∏—Å–æ–∫ FAQ */}
        <div className="space-y-6">
          <AnimatePresence initial={false}>
            {filteredFaqs.length === 0 ? (
              <motion.div 
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                exit={{ opacity: 0, y: 20 }}
                transition={{ duration: 0.5 }}
                className="bg-white dark:bg-gray-800 rounded-xl p-8 text-center shadow-lg"
              >
                <div className="text-5xl mb-4">üîç</div>
                <h3 className="text-xl font-bold text-gray-900 dark:text-white mb-2">–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</h3>
                <p className="text-gray-600 dark:text-gray-400 mb-4">
                  –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ –∏–ª–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã
                </p>
                <button 
                  onClick={() => {setSearchQuery(''); setActiveCategory('all');}}
                  className="px-4 py-2 bg-primary hover:bg-primary-dark text-white font-medium rounded-full"
                >
                  –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã
                </button>
              </motion.div>
            ) : (
              filteredFaqs.map((faq, index) => (
                <motion.div 
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  exit={{ opacity: 0, y: 20 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  className="group"
                >
                  <div 
                    className={`bg-white dark:bg-gray-800 rounded-xl overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300 border border-gray-100 dark:border-gray-700 ${
                      openIndex === index ? 'shadow-xl shadow-primary/10' : ''
                    }`}
                  >
                    <button
                      onClick={() => toggleFaq(index)}
                      className="w-full flex items-start p-6 text-left relative overflow-hidden"
                    >
                      {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏ */}
                      <div 
                        className="absolute top-0 right-0 px-3 py-1 text-xs font-medium rounded-bl-xl"
                        style={{ 
                          background: `rgba(123, 44, 191, ${faq.popularityScore / 100})`,
                          color: 'white'
                        }}
                      >
                        {formatPopularity(faq.popularityScore)}
                      </div>
                      
                      {/* –ò–∫–æ–Ω–∫–∞ */}
                      <div className="mr-4 mt-1 flex-shrink-0 w-10 h-10 rounded-full bg-primary/10 dark:bg-primary/20 flex items-center justify-center text-xl text-primary dark:text-primary-light">
                        {faq.icon}
                      </div>
                      
                      {/* –¢–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞ */}
                      <div className="flex-grow pr-10">
                        <h3 className="text-lg font-semibold text-gray-900 dark:text-white">
                          {faq.question}
                        </h3>
                        
                        {/* –ë–µ–π–¥–∂ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
                        <div className="flex items-center mt-2">
                          <span className="inline-block px-2 py-1 text-xs rounded-full bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-300">
                            {faq.category}
                          </span>
                        </div>
                      </div>
                      
                      {/* –ò–∫–æ–Ω–∫–∞ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è */}
                      <motion.div
                        animate={{ rotate: openIndex === index ? 180 : 0 }}
                        transition={{ duration: 0.3 }}
                        className="text-primary dark:text-primary-light ml-4 flex-shrink-0 absolute right-6 top-6"
                      >
                        <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M19 9l-7 7-7-7" />
                        </svg>
                      </motion.div>
                    </button>
                    
                    {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –æ—Ç–≤–µ—Ç–∞ */}
                    <AnimatePresence>
                      {openIndex === index && (
                        <motion.div
                          initial={{ height: 0, opacity: 0 }}
                          animate={{ height: 'auto', opacity: 1 }}
                          exit={{ height: 0, opacity: 0 }}
                          transition={{ duration: 0.3 }}
                          className="overflow-hidden"
                        >
                          <div className="p-6 pt-0 border-t border-gray-200 dark:border-gray-700">
                            <div className="text-gray-700 dark:text-gray-300 mb-4">
                              {faq.answer}
                            </div>
                            
                            {/* –†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ */}
                            <div className="mt-6 bg-gray-50 dark:bg-gray-900/50 rounded-xl p-4">
                              {faq.expandedContent.steps && (
                                <div className="mb-4">
                                  <h4 className="text-sm font-bold text-gray-800 dark:text-gray-200 mb-3">–≠—Ç–∞–ø—ã –≤–Ω–µ–¥—Ä–µ–Ω–∏—è:</h4>
                                  <div className="relative pl-8">
                                    <div className="absolute left-3 top-0 bottom-0 w-0.5 bg-primary/30 dark:bg-primary/50"></div>
                                    
                                    {faq.expandedContent.steps.map((step, idx) => (
                                      <motion.div 
                                        key={idx}
                                        className="mb-3 relative"
                                        initial={{ opacity: 0, x: -10 }}
                                        animate={{ opacity: 1, x: 0 }}
                                        transition={{ delay: 0.2 + idx * 0.1 }}
                                      >
                                        <div className="absolute -left-5 top-0 w-4 h-4 rounded-full bg-primary"></div>
                                        <div className="flex justify-between">
                                          <span className="font-medium text-gray-800 dark:text-gray-200">{step.name}</span>
                                          <span className="text-sm text-gray-500 dark:text-gray-400">{step.duration}</span>
                                        </div>
                                      </motion.div>
                                    ))}
                                  </div>
                                  
                                  {faq.expandedContent.note && (
                                    <div className="mt-3 text-sm text-gray-600 dark:text-gray-400 italic">
                                      {faq.expandedContent.note}
                                    </div>
                                  )}
                                </div>
                              )}
                              
                              {faq.expandedContent.supportLevels && (
                                <div className="mb-4">
                                  <h4 className="text-sm font-bold text-gray-800 dark:text-gray-200 mb-3">–£—Ä–æ–≤–Ω–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏:</h4>
                                  <div className="grid grid-cols-1 md:grid-cols-3 gap-3">
                                    {faq.expandedContent.supportLevels.map((level, idx) => (
                                      <motion.div 
                                        key={idx}
                                        className="bg-white dark:bg-gray-800 p-3 rounded-lg shadow-sm"
                                        initial={{ opacity: 0, y: 10 }}
                                        animate={{ opacity: 1, y: 0 }}
                                        transition={{ delay: 0.2 + idx * 0.1 }}
                                      >
                                        <div className="text-primary dark:text-primary-light font-bold mb-1">{level.level}</div>
                                        <div className="text-sm text-gray-600 dark:text-gray-400">
                                          <div>–í—Ä–µ–º—è –æ—Ç–∫–ª–∏–∫–∞: {level.responseTime}</div>
                                          <div>–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å: {level.availability}</div>
                                        </div>
                                      </motion.div>
                                    ))}
                                  </div>
                                  
                                  {faq.expandedContent.channels && (
                                    <div className="mt-3">
                                      <h5 className="text-sm font-medium text-gray-800 dark:text-gray-200 mb-1">–ö–∞–Ω–∞–ª—ã —Å–≤—è–∑–∏:</h5>
                                      <div className="flex flex-wrap gap-2">
                                        {faq.expandedContent.channels.map((channel, idx) => (
                                          <span 
                                            key={idx}
                                            className="px-2 py-1 text-xs bg-primary/10 text-primary dark:bg-primary/20 dark:text-primary-light rounded-full"
                                          >
                                            {channel}
                                          </span>
                                        ))}
                                      </div>
                                    </div>
                                  )}
                                </div>
                              )}
                              
                              {faq.expandedContent.supportedSystems && (
                                <div className="mb-4">
                                  <h4 className="text-sm font-bold text-gray-800 dark:text-gray-200 mb-3">–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Å–∏—Å—Ç–µ–º—ã:</h4>
                                  <div className="grid grid-cols-2 md:grid-cols-3 gap-3">
                                    {faq.expandedContent.supportedSystems.map((system, idx) => (
                                      <motion.div 
                                        key={idx}
                                        className="bg-white dark:bg-gray-800 p-3 rounded-lg shadow-sm"
                                        initial={{ opacity: 0, scale: 0.9 }}
                                        animate={{ opacity: 1, scale: 1 }}
                                        transition={{ delay: 0.2 + idx * 0.1 }}
                                      >
                                       <div className="font-medium text-gray-800 dark:text-gray-200">{system.name}</div>
                                        <div className="text-xs text-primary dark:text-primary-light">{system.integration}</div>
                                      </motion.div>
                                    ))}
                                  </div>
                                </div>
                              )}
                              
                              {faq.expandedContent.securityMeasures && (
                                <div className="mb-4">
                                  <h4 className="text-sm font-bold text-gray-800 dark:text-gray-200 mb-3">–ú–µ—Ä—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:</h4>
                                  <div className="space-y-2">
                                    {faq.expandedContent.securityMeasures.map((measure, idx) => (
                                      <motion.div 
                                        key={idx}
                                        className="flex items-start"
                                        initial={{ opacity: 0, x: -10 }}
                                        animate={{ opacity: 1, x: 0 }}
                                        transition={{ delay: 0.2 + idx * 0.1 }}
                                      >
                                        <div className="flex-shrink-0 w-5 h-5 rounded-full bg-green-500 text-white flex items-center justify-center text-xs mr-2 mt-0.5">‚úì</div>
                                        <div className="text-sm text-gray-700 dark:text-gray-300">{measure}</div>
                                      </motion.div>
                                    ))}
                                  </div>
                                  
                                  {faq.expandedContent.certifications && (
                                    <div className="mt-3">
                                      <h5 className="text-sm font-medium text-gray-800 dark:text-gray-200 mb-1">–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:</h5>
                                      <div className="flex flex-wrap gap-2">
                                        {faq.expandedContent.certifications.map((cert, idx) => (
                                          <span 
                                            key={idx}
                                            className="px-2 py-1 text-xs bg-blue-50 text-blue-700 dark:bg-blue-900/30 dark:text-blue-300 rounded-full"
                                          >
                                            {cert}
                                          </span>
                                        ))}
                                      </div>
                                    </div>
                                  )}
                                </div>
                              )}
                              
                              {faq.expandedContent.plans && (
                                <div className="mb-4">
                                  <h4 className="text-sm font-bold text-gray-800 dark:text-gray-200 mb-3">–¢–∞—Ä–∏—Ñ–Ω—ã–µ –ø–ª–∞–Ω—ã:</h4>
                                  <div className="overflow-x-auto">
                                    <table className="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
                                      <thead className="bg-gray-100 dark:bg-gray-800">
                                        <tr>
                                          <th className="px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">–ü–ª–∞–Ω</th>
                                          <th className="px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</th>
                                          <th className="px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">–°—Ç–æ–∏–º–æ—Å—Ç—å</th>
                                        </tr>
                                      </thead>
                                      <tbody className="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
                                        {faq.expandedContent.plans.map((plan, idx) => (
                                          <motion.tr 
                                            key={idx}
                                            initial={{ opacity: 0, y: 5 }}
                                            animate={{ opacity: 1, y: 0 }}
                                            transition={{ delay: 0.2 + idx * 0.1 }}
                                          >
                                            <td className="px-4 py-2 text-sm font-medium text-gray-900 dark:text-white">{plan.name}</td>
                                            <td className="px-4 py-2 text-sm text-gray-700 dark:text-gray-300">{plan.users}</td>
                                            <td className="px-4 py-2 text-sm text-primary dark:text-primary-light font-medium">{plan.price}</td>
                                          </motion.tr>
                                        ))}
                                      </tbody>
                                    </table>
                                  </div>
                                  
                                  {faq.expandedContent.discounts && (
                                    <div className="mt-3 text-sm text-gray-600 dark:text-gray-400">
                                      <strong>–°–∫–∏–¥–∫–∏:</strong> {faq.expandedContent.discounts}
                                    </div>
                                  )}
                                </div>
                              )}
                              
                              {faq.expandedContent.customizationOptions && (
                                <div className="mb-4">
                                  <h4 className="text-sm font-bold text-gray-800 dark:text-gray-200 mb-3">–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–æ—Ä–∞–±–æ—Ç–∫–∏:</h4>
                                  <div className="grid grid-cols-1 md:grid-cols-2 gap-2">
                                    {faq.expandedContent.customizationOptions.map((option, idx) => (
                                      <motion.div 
                                        key={idx}
                                        className="flex items-center"
                                        initial={{ opacity: 0, x: -10 }}
                                        animate={{ opacity: 1, x: 0 }}
                                        transition={{ delay: 0.2 + idx * 0.1 }}
                                      >
                                        <span className="text-primary dark:text-primary-light mr-2">‚Ä¢</span>
                                        <span className="text-sm text-gray-700 dark:text-gray-300">{option}</span>
                                      </motion.div>
                                    ))}
                                  </div>
                                  
                                  {faq.expandedContent.process && (
                                    <div className="mt-3 text-sm text-gray-600 dark:text-gray-400 bg-white dark:bg-gray-800 p-3 rounded-lg border border-gray-200 dark:border-gray-700">
                                      <strong>–ü—Ä–æ—Ü–µ—Å—Å –¥–æ—Ä–∞–±–æ—Ç–∫–∏:</strong> {faq.expandedContent.process}
                                    </div>
                                  )}
                                </div>
                              )}
                              
                              {faq.expandedContent.trainingOptions && (
                                <div className="mb-4">
                                  <h4 className="text-sm font-bold text-gray-800 dark:text-gray-200 mb-3">–í–∞—Ä–∏–∞–Ω—Ç—ã –æ–±—É—á–µ–Ω–∏—è:</h4>
                                  <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
                                    {faq.expandedContent.trainingOptions.map((option, idx) => (
                                      <motion.div 
                                        key={idx}
                                        className="bg-white dark:bg-gray-800 p-3 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700"
                                        initial={{ opacity: 0, y: 10 }}
                                        animate={{ opacity: 1, y: 0 }}
                                        transition={{ delay: 0.2 + idx * 0.1 }}
                                      >
                                        <div className="font-medium text-gray-900 dark:text-white mb-1">{option.type}</div>
                                        <div className="text-xs text-gray-500 dark:text-gray-400">–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {option.duration}</div>
                                        <div className="text-xs text-gray-500 dark:text-gray-400">–î–ª—è: {option.audience}</div>
                                      </motion.div>
                                    ))}
                                  </div>
                                  
                                  {faq.expandedContent.materials && (
                                    <div className="mt-3">
                                      <h5 className="text-sm font-medium text-gray-800 dark:text-gray-200 mb-1">–£—á–µ–±–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:</h5>
                                      <div className="flex flex-wrap gap-2">
                                        {faq.expandedContent.materials.map((material, idx) => (
                                          <span 
                                            key={idx}
                                            className="px-2 py-1 text-xs bg-primary/10 text-primary dark:bg-primary/20 dark:text-primary-light rounded-full"
                                          >
                                            {material}
                                          </span>
                                        ))}
                                      </div>
                                    </div>
                                  )}
                                </div>
                              )}
                            </div>
                            
                            {/* –ö–Ω–æ–ø–∫–∏ –¥–ª—è —Å–≤—è–∑–∏ */}
                            <div className="mt-6 flex flex-wrap gap-3">
                              <motion.button
                                whileHover={{ scale: 1.05 }}
                                whileTap={{ scale: 0.95 }}
                                className="px-4 py-2 bg-primary hover:bg-primary-dark text-white text-sm font-medium rounded-full shadow-md inline-flex items-center"
                              >
                                <svg className="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
                                </svg>
                                –ó–∞–¥–∞—Ç—å —É—Ç–æ—á–Ω—è—é—â–∏–π –≤–æ–ø—Ä–æ—Å
                              </motion.button>
                              
                              <motion.button
                                whileHover={{ scale: 1.05 }}
                                whileTap={{ scale: 0.95 }}
                                className="px-4 py-2 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 text-gray-700 dark:text-gray-300 text-sm font-medium rounded-full shadow-sm inline-flex items-center"
                              >
                                <svg className="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                                </svg>
                                –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ —Ç–µ–º–µ
                              </motion.button>
                              
                              <motion.button
                                whileHover={{ scale: 1.05 }}
                                whileTap={{ scale: 0.95 }}
                                className="px-4 py-2 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 text-gray-700 dark:text-gray-300 text-sm font-medium rounded-full shadow-sm inline-flex items-center"
                              >
                                <svg className="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M15 15l-2 5L9 9l11 4-5 2zm0 0l5 5M7.188 2.239l.777 2.897M5.136 7.965l-2.898-.777M13.95 4.05l-2.122 2.122m-5.657 5.656l-2.12 2.122" />
                                </svg>
                                –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞
                              </motion.button>
                            </div>
                          </div>
                        </motion.div>
                      )}
                    </AnimatePresence>
                  </div>
                </motion.div>
              ))
            )}
          </AnimatePresence>
        </div>
        
        {/* CTA —Å–µ–∫—Ü–∏—è */}
        <motion.div 
          className="mt-16 text-center"
          initial={{ opacity: 0, y: 20 }}
          animate={isInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
          transition={{ duration: 0.6, delay: 1 }}
        >
          <div className="relative">
            {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã */}
            <div className="absolute -top-8 left-1/4 w-12 h-12 rounded-full bg-primary/20 dark:bg-primary/30 blur-xl"></div>
            <div className="absolute -bottom-8 right-1/4 w-12 h-12 rounded-full bg-primary/20 dark:bg-primary/30 blur-xl"></div>
            
            <div className="bg-gradient-to-r from-primary/10 via-white to-primary/10 dark:from-primary/20 dark:via-gray-800 dark:to-primary/20 rounded-2xl p-8 max-w-2xl mx-auto shadow-lg relative overflow-hidden border border-gray-100 dark:border-gray-700">
              <motion.div 
                className="absolute -right-8 -top-8 w-32 h-32 rounded-full bg-primary/10 dark:bg-primary/20"
                animate={{ 
                  scale: [1, 1.2, 1],
                  rotate: [0, 15, 0]
                }}
                transition={{ 
                  duration: 5,
                  repeat: Infinity,
                  repeatType: "reverse"
                }}
              ></motion.div>
              
              <h3 className="text-xl font-bold text-gray-900 dark:text-white mb-4 relative z-10">
                –ù–µ –Ω–∞—à–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å?
              </h3>
              <p className="text-gray-700 dark:text-gray-300 mb-6 relative z-10">
                –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é, –∏ –º—ã —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º –æ—Ç–≤–µ—Ç–∏–º –Ω–∞ –≤—Å–µ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã
              </p>
              
              <div className="flex flex-col sm:flex-row justify-center items-center gap-4 relative z-10">
                <motion.button
                  whileHover={{ scale: 1.05, boxShadow: "0 10px 25px -5px rgba(123, 44, 191, 0.3)" }}
                  whileTap={{ scale: 0.95 }}
                  className="px-6 py-3 bg-primary hover:bg-primary-dark text-white font-medium rounded-full shadow-lg inline-flex items-center justify-center gap-2 w-full sm:w-auto"
                >
                  <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                  </svg>
                  –ù–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º
                </motion.button>
                
                <motion.button
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                  className="px-6 py-3 bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-300 border border-gray-200 dark:border-gray-700 font-medium rounded-full inline-flex items-center justify-center gap-2 w-full sm:w-auto"
                >
                  <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M16 8l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2M5 3a2 2 0 00-2 2v1c0 8.284 6.716 15 15 15h1a2 2 0 002-2v-3.28a1 1 0 00-.684-.948l-4.493-1.498a1 1 0 00-1.21.502l-1.13 2.257a11.042 11.042 0 01-5.516-5.517l2.257-1.128a1 1 0 00.502-1.21L9.228 3.683A1 1 0 008.279 3H5z" />
                  </svg>
                  –ü–æ–∑–≤–æ–Ω–∏—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É
                </motion.button>
              </div>
              
              <div className="flex items-center justify-center mt-6 relative z-10 gap-4">
                <motion.a 
                  href="#"
                  className="text-gray-600 dark:text-gray-400 hover:text-primary dark:hover:text-primary-light transition-colors"
                  whileHover={{ scale: 1.2 }}
                  whileTap={{ scale: 0.9 }}
                >
                  <svg className="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385h-3.047v-3.47h3.047v-2.642c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953h-1.514c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385c5.737-.9 10.126-5.864 10.126-11.854z"/>
                  </svg>
                </motion.a>
                <motion.a 
                  href="#"
                  className="text-gray-600 dark:text-gray-400 hover:text-primary dark:hover:text-primary-light transition-colors"
                  whileHover={{ scale: 1.2 }}
                  whileTap={{ scale: 0.9 }}
                >
                  <svg className="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z"/>
                  </svg>
                </motion.a>
                <motion.a 
                  href="#"
                  className="text-gray-600 dark:text-gray-400 hover:text-primary dark:hover:text-primary-light transition-colors"
                  whileHover={{ scale: 1.2 }}
                  whileTap={{ scale: 0.9 }}
                >
                  <svg className="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M19.615 3.184c-3.604-.246-11.631-.245-15.23 0-3.897.266-4.356 2.62-4.385 8.816.029 6.185.484 8.549 4.385 8.816 3.6.245 11.626.246 15.23 0 3.897-.266 4.356-2.62 4.385-8.816-.029-6.185-.484-8.549-4.385-8.816zm-10.615 12.816v-8l8 3.993-8 4.007z"/>
                  </svg>
                </motion.a>
                <motion.a 
                  href="#"
                  className="text-gray-600 dark:text-gray-400 hover:text-primary dark:hover:text-primary-light transition-colors"
                  whileHover={{ scale: 1.2 }}
                  whileTap={{ scale: 0.9 }}
                >
                  <svg className="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M22.46 6c-.77.35-1.6.58-2.46.69.88-.53 1.56-1.37 1.88-2.38-.83.5-1.75.85-2.72 1.05-.78-.83-1.9-1.36-3.13-1.36-2.37 0-4.3 1.92-4.3 4.3 0 .33.03.66.11.98-3.56-.18-6.73-1.89-8.84-4.48-.37.63-.58 1.37-.58 2.15 0 1.49.75 2.81 1.91 3.56-.71 0-1.37-.2-1.95-.5v.03c0 2.08 1.48 3.82 3.44 4.21a4.22 4.22 0 0 1-1.93.07 4.28 4.28 0 0 0 4.01 2.98 8.521 8.521 0 0 1-5.33 1.84c-.34 0-.68-.02-1.02-.06C3.44 20.29 5.7 21 8.12 21 16.44 21 21.06 14.16 21.06 8.29V7.84c.85-.62 1.56-1.387 2.14-2.27z"/>
                  </svg>
                </motion.a>
              </div>
            </div>
          </div>
        </motion.div>
      </div>
      
      {/* –°—Ç–∏–ª–∏ –¥–ª—è 3D —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ –∏ –∞–Ω–∏–º–∞—Ü–∏–π */}
      <style jsx>{`
        @keyframes pulse {
          0% { transform: scale(1); }
          50% { transform: scale(1.05); }
          100% { transform: scale(1); }
        }
        
        .pulse {
          animation: pulse 3s ease-in-out infinite;
        }
        
        @keyframes float {
          0% { transform: translateY(0); }
          50% { transform: translateY(-10px); }
          100% { transform: translateY(0); }
        }
        
        .float {
          animation: float 5s ease-in-out infinite;
        }
      `}</style>
    </section>
  );
};