'use client';

import React, { useState, useEffect, useRef } from 'react';
import Link from 'next/link';
import { motion, useInView, AnimatePresence } from 'framer-motion';
import { useLanguageStore } from '@/src/store/language';
import { useTelegram } from '@/src/hooks/useTelegram';
import { ArrowRightIcon, CheckCircleIcon, PlayIcon } from '@heroicons/react/24/outline';

// –î–∞–Ω–Ω—ã–µ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏
const localization = {
  ru: {
    hero: {
      title: '–ö–æ–º—É –ø–æ–¥—Ö–æ–¥–∏—Ç Car-Sale',
      subtitle: '–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ —Å–≤–æ–π –∞–≤—Ç–æ–±–∏–∑–Ω–µ—Å —Å –Ω–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π',
      description: 'Car-Sale —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤ –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω–æ–≥–æ —Ä—ã–Ω–∫–∞. –£–∑–Ω–∞–π—Ç–µ, –∫–∞–∫ –Ω–∞—à–∞ —Å–∏—Å—Ç–µ–º–∞ –º–æ–∂–µ—Ç —Ä–µ—à–∏—Ç—å –∑–∞–¥–∞—á–∏ –∏–º–µ–Ω–Ω–æ –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞.'
    },
    segments: {
      title: '–¶–µ–ª–µ–≤—ã–µ —Å–µ–≥–º–µ–Ω—Ç—ã',
      description: '–ù–∞—à–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–∞ –¥–ª—è —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–∏—è –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω–æ–≥–æ —Ä—ã–Ω–∫–∞',
      list: [
        {
          id: 'dealers',
          name: '–ê–≤—Ç–æ–¥–∏–ª–µ—Ä—ã',
          icon: 'üöó',
          color: '#7B2CBF',
          description: '–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–∏ –∞–≤—Ç–æ–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–π, —É–ø—Ä–∞–≤–ª—è—é—â–∏–µ –ø–æ–ª–Ω—ã–º —Ü–∏–∫–ª–æ–º –ø—Ä–æ–¥–∞–∂ –Ω–æ–≤—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π.',
          benefits: [
            '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∞—Å–∞–º–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏',
            '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è —Å–¥–µ–ª–æ–∫',
            '–ï–¥–∏–Ω–∞—è –±–∞–∑–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å –∏—Å—Ç–æ—Ä–∏–µ–π –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è',
            '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å CRM-—Å–∏—Å—Ç–µ–º–∞–º–∏ –∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏',
            '–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø—Ä–æ–¥–∞–∂'
          ],
          caseStudy: {
            company: '–ê–≤—Ç–æ–ü—Ä–µ—Å—Ç–∏–∂',
            result: '–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–∂ –Ω–∞ 35% –∑–∞ 6 –º–µ—Å—è—Ü–µ–≤ –ø–æ—Å–ª–µ –≤–Ω–µ–¥—Ä–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã',
            quote: 'Car-Sale –ø–æ–º–æ–≥–ª–∞ –Ω–∞–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã, –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞ —Å –∫–ª–∏–µ–Ω—Ç–æ–º –¥–æ –ø–æ—Å–ª–µ–ø—Ä–æ–¥–∞–∂–Ω–æ–≥–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è.',
            author: '–ê–ª–µ–∫—Å–µ–π –ü–µ—Ç—Ä–æ–≤, –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–π –¥–∏—Ä–µ–∫—Ç–æ—Ä'
          }
        },
        {
          id: 'showrooms',
          name: '–ê–≤—Ç–æ—Å–∞–ª–æ–Ω—ã',
          icon: 'üè¢',
          color: '#0891B2',
          description: '–ù–µ–∑–∞–≤–∏—Å–∏–º—ã–µ –ø–ª–æ—â–∞–¥–∫–∏ –ø–æ –ø—Ä–æ–¥–∞–∂–µ –Ω–æ–≤—ã—Ö –∏ –ø–æ–¥–µ—Ä–∂–∞–Ω–Ω—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–∞—Ä–æ–∫.',
          benefits: [
            '–ö–∞—Ç–∞–ª–æ–≥–∏–∑–∞—Ü–∏—è —Ä–∞–∑–Ω–æ—Ä–æ–¥–Ω–æ–≥–æ –∞–≤—Ç–æ–ø–∞—Ä–∫–∞ —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –æ–ø–∏—Å–∞–Ω–∏–µ–º',
            '–ì–∏–±–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π',
            '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–∏—Å—Å–∏—è–º–∏ –∏ —Å–∏—Å—Ç–µ–º–æ–π –º–æ—Ç–∏–≤–∞—Ü–∏–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤',
            '–ö–æ–Ω—Ç—Ä–æ–ª—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–¥–µ—Ä–∂–∞–Ω–Ω—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π',
            '–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è –≤ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞—Ö'
          ],
          caseStudy: {
            company: '–ê–≤—Ç–æ–ú–∏—Ä',
            result: '–°–æ–∫—Ä–∞—â–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞ –Ω–∞ 40%',
            quote: '–ë–ª–∞–≥–æ–¥–∞—Ä—è –µ–¥–∏–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ —É—á–µ—Ç–∞ –º—ã –º–æ–∂–µ–º –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –∫–ª–∏–µ–Ω—Ç—É –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –ª—é–±–æ–º—É –∞–≤—Ç–æ–º–æ–±–∏–ª—é –∏–∑ –Ω–∞—à–µ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞.',
            author: '–ò—Ä–∏–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞, —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –æ—Ç–¥–µ–ª–∞ –ø—Ä–æ–¥–∞–∂'
          }
        },
        {
          id: 'finance',
          name: '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã',
          icon: 'üí∞',
          color: '#F59E0B',
          description: '–ë–∞–Ω–∫–∏, –ú–§–û –∏ –ª–∏–∑–∏–Ω–≥–æ–≤—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—â–∏–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —É—Å–ª—É–≥–∏ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π.',
          benefits: [
            'API –¥–ª—è –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å —Å–∏—Å—Ç–µ–º–∞–º–∏ –∞–≤—Ç–æ–¥–∏–ª–µ—Ä–æ–≤',
            '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞—è–≤–æ–∫ –Ω–∞ –∫—Ä–µ–¥–∏—Ç/–ª–∏–∑–∏–Ω–≥',
            '–¶–∏—Ñ—Ä–æ–≤–æ–µ –ø–æ–¥–ø–∏—Å–∞–Ω–∏–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏',
            '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–º–∏ —Ä–∏—Å–∫–∞–º–∏',
            '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏ –∏—Ö —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏'
          ],
          caseStudy: {
            company: '–ê–≤—Ç–æ–§–∏–Ω–∞–Ω—Å –ë–∞–Ω–∫',
            result: '–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –æ–¥–æ–±—Ä–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫ –Ω–∞ –∞–≤—Ç–æ–∫—Ä–µ–¥–∏—Ç—ã –Ω–∞ 25%',
            quote: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Car-Sale –ø–æ–∑–≤–æ–ª–∏–ª–∞ –Ω–∞–º —Å–æ–∫—Ä–∞—Ç–∏—Ç—å –≤—Ä–µ–º—è —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ —Å 2 –¥–Ω–µ–π –¥–æ 30 –º–∏–Ω—É—Ç.',
            author: '–ú–∞–∫—Å–∏–º –ò–≤–∞–Ω–æ–≤, –¥–∏—Ä–µ–∫—Ç–æ—Ä –ø–æ –∞–≤—Ç–æ–∫—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–∏—é'
          }
        },
        {
          id: 'importers',
          name: '–ò–º–ø–æ—Ä—Ç–µ—Ä—ã/–ø–æ—Å—Ç–∞–≤—â–∏–∫–∏',
          icon: 'üö¢',
          color: '#059669',
          description: '–ö–æ–º–ø–∞–Ω–∏–∏, –∑–∞–Ω–∏–º–∞—é—â–∏–µ—Å—è –∏–º–ø–æ—Ä—Ç–æ–º –∏ –æ–ø—Ç–æ–≤–æ–π –ø–æ—Å—Ç–∞–≤–∫–æ–π –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –∏ –∑–∞–ø—á–∞—Å—Ç–µ–π –Ω–∞ —Ä—ã–Ω–æ–∫.',
          benefits: [
            '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∏–º–∏ —Ü–µ–ø–æ—á–∫–∞–º–∏ –ø–æ—Å—Ç–∞–≤–æ–∫',
            '–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø–∞—Ä—Ç–∏–π –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏',
            '–ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø—Ä–æ—Å–∞ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–∫—É–ø–æ–∫',
            '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Ç–∞–º–æ–∂–µ–Ω–Ω—ã–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏',
            '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ –¥–∏–ª–µ—Ä—Å–∫–æ–π —Å–µ—Ç–∏'
          ],
          caseStudy: {
            company: '–ò–º–ø–æ—Ä—Ç–ê–≤—Ç–æ',
            result: '–°–æ–∫—Ä–∞—â–µ–Ω–∏–µ —Å—Ä–æ–∫–æ–≤ –ø–æ—Å—Ç–∞–≤–∫–∏ –Ω–∞ 20% –∏ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –æ–±–æ—Ä–æ—Ç–∞ –Ω–∞ 15%',
            quote: 'Car-Sale –ø–æ–º–æ–≥–ª–∞ –Ω–∞–º —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ–∑—Ä–∞—á–Ω—É—é —Å–∏—Å—Ç–µ–º—É —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –ø–æ –≤—Å–µ–π –¥–∏–ª–µ—Ä—Å–∫–æ–π —Å–µ—Ç–∏ —Å —É—á–µ—Ç–æ–º —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π —Å–ø—Ä–æ—Å–∞.',
            author: '–ê–Ω–¥—Ä–µ–π –°–æ–∫–æ–ª–æ–≤, –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –¥–∏—Ä–µ–∫—Ç–æ—Ä'
          }
        },
        {
          id: 'service',
          name: '–°–µ—Ä–≤–∏—Å–Ω—ã–µ —Ü–µ–Ω—Ç—Ä—ã',
          icon: 'üîß',
          color: '#DC2626',
          description: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ü–µ–Ω—Ç—Ä—ã –ø–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—é –∏ —Ä–µ–º–æ–Ω—Ç—É –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–∞—Ä–æ–∫.',
          benefits: [
            '–£—á–µ—Ç —Å–µ—Ä–≤–∏—Å–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏ –∫–∞–∂–¥–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è',
            '–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–µ—Ä–≤–∏—Å–Ω—ã—Ö –º–æ—â–Ω–æ—Å—Ç–µ–π',
            '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∞—Å–∞–º–∏ –∑–∞–ø—á–∞—Å—Ç–µ–π –∏ —Ä–∞—Å—Ö–æ–¥–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤',
            '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞–º –æ –ø–ª–∞–Ω–æ–≤–æ–º –¢–û',
            '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–Ω—ã—Ö —Ä–∞–±–æ—Ç'
          ],
          caseStudy: {
            company: '–ê–≤—Ç–æ–¢–µ—Ö–°–µ—Ä–≤–∏—Å',
            result: '–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –ø—Ä–æ–ø—É—Å–∫–Ω–æ–π —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞ –Ω–∞ 30%',
            quote: '–°–∏—Å—Ç–µ–º–∞ –ø–æ–∑–≤–æ–ª–∏–ª–∞ –Ω–∞–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å—ã –∑–∞–ø–∏—Å–∏, –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏ —Ä–µ–º–æ–Ω—Ç–∞, —á—Ç–æ —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ –ø–æ–≤—ã—Å–∏–ª–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã.',
            author: '–î–º–∏—Ç—Ä–∏–π –í–∞—Å–∏–ª—å–µ–≤, –¥–∏—Ä–µ–∫—Ç–æ—Ä —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞'
          }
        },
        {
          id: 'marketplace',
          name: '–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—ã',
          icon: 'üåê',
          color: '#7C3AED',
          description: '–û–Ω–ª–∞–π–Ω-–ø–ª–æ—â–∞–¥–∫–∏ –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π, –æ–±—ä–µ–¥–∏–Ω—è—é—â–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø—Ä–æ–¥–∞–≤—Ü–æ–≤.',
          benefits: [
            'API –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π',
            '–£–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∫–∞—Ç–∞–ª–æ–≥–∏–∑–∞—Ü–∏–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π',
            '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –∏ –º–æ–¥–µ—Ä–∞—Ü–∏—è',
            '–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ —Ä—ã–Ω–∫–∞ –∏ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è',
            '–°–∏—Å—Ç–µ–º–∞ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤ –∏ –æ—Ç–∑—ã–≤–æ–≤ –æ –ø—Ä–æ–¥–∞–≤—Ü–∞—Ö'
          ],
          caseStudy: {
            company: '–ê–≤—Ç–æ–ú–∞—Ä–∫–µ—Ç',
            result: '–†–æ—Å—Ç —Å—Ä–µ–¥–Ω–µ–º–µ—Å—è—á–Ω—ã—Ö –ø—Ä–æ–¥–∞–∂ —á–µ—Ä–µ–∑ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –Ω–∞ 45%',
            quote: '–ë–ª–∞–≥–æ–¥–∞—Ä—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Car-Sale –Ω–∞—à –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å –ø–æ–ª—É—á–∏–ª –¥–æ—Å—Ç—É–ø –∫ –∞–∫—Ç—É–∞–ª—å–Ω—ã–º –¥–∞–Ω–Ω—ã–º –ø–æ –Ω–∞–ª–∏—á–∏—é –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π —É –¥–∏–ª–µ—Ä–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏.',
            author: '–ï–ª–µ–Ω–∞ –ö—É–∑–Ω–µ—Ü–æ–≤–∞, CEO'
          }
        }
      ],
    },
    customSolutions: {
      title: '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è',
      description: '–ú—ã –ø–æ–Ω–∏–º–∞–µ–º, —á—Ç–æ –∫–∞–∂–¥—ã–π –±–∏–∑–Ω–µ—Å —É–Ω–∏–∫–∞–ª–µ–Ω –∏ –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –æ—Å–æ–±—ã–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏. –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –≥–æ—Ç–æ–≤–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –≤–∞—à–∏–º —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º.',
      list: [
        {
          title: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –≤–∞—à–∏–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏',
          description: '–ú—ã —Å–æ–∑–¥–∞–¥–∏–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ API –∏ –∫–æ–Ω–Ω–µ–∫—Ç–æ—Ä—ã –¥–ª—è –±–µ—Å—à–æ–≤–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Car-Sale —Å –≤–∞—à–∏–º–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ –ò–¢-—Å–∏—Å—Ç–µ–º–∞–º–∏.',
          icon: 'üîÑ'
        },
        {
          title: '–ö–∞—Å—Ç–æ–º–Ω—ã–µ –º–æ–¥—É–ª–∏',
          description: '–†–∞–∑—Ä–∞–±–æ—Ç–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏ –ø–æ–¥ –≤–∞—à–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å—ã –∏ –∑–∞–¥–∞—á–∏.',
          icon: '‚öôÔ∏è'
        },
        {
          title: '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞',
          description: '–°–æ–∑–¥–∞–¥–∏–º —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç—ã –∏ –¥–∞—à–±–æ—Ä–¥—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∫–ª—é—á–µ–≤—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞.',
          icon: 'üìä'
        },
        {
          title: '–ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º—ã–µ —Ä–µ—à–µ–Ω–∏—è',
          description: '–ù–∞—à–∞ —Å–∏—Å—Ç–µ–º–∞ –±—É–¥–µ—Ç —Ä–∞—Å—Ç–∏ –≤–º–µ—Å—Ç–µ —Å –≤–∞—à–∏–º –±–∏–∑–Ω–µ—Å–æ–º, –ª–µ–≥–∫–æ –∞–¥–∞–ø—Ç–∏—Ä—É—è—Å—å –∫ —É–≤–µ–ª–∏—á–µ–Ω–∏—é –æ–±—ä–µ–º–æ–≤ –∏ –Ω–æ–≤—ã–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º.',
          icon: 'üìà'
        }
      ]
    },
    testimonials: {
      title: '–ò—Å—Ç–æ—Ä–∏–∏ —É—Å–ø–µ—Ö–∞ –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤',
      description: '–£–∑–Ω–∞–π—Ç–µ, –∫–∞–∫ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω–æ–≥–æ —Å–µ–∫—Ç–æ—Ä–∞ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–ª–∏ —Å–≤–æ–π –±–∏–∑–Ω–µ—Å —Å –ø–æ–º–æ—â—å—é Car-Sale',
      list: [
        {
          name: 'Autocar Group',
          position: '–°–µ—Ç—å –∏–∑ 12 –∞–≤—Ç–æ—Å–∞–ª–æ–Ω–æ–≤',
          quote: '–ü–æ—Å–ª–µ –≤–Ω–µ–¥—Ä–µ–Ω–∏—è Car-Sale –º—ã —Å–º–æ–≥–ª–∏ —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ–π —Å–µ—Ç—å—é –∞–≤—Ç–æ—Å–∞–ª–æ–Ω–æ–≤, —á—Ç–æ –ø–æ–≤—ã—Å–∏–ª–æ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∏ —Å–ø–æ—Å–æ–±—Å—Ç–≤–æ–≤–∞–ª–æ —Ä–æ—Å—Ç—É –ø—Ä–æ–¥–∞–∂ –Ω–∞ 28% –≤ –ø–µ—Ä–≤—ã–π –≥–æ–¥.',
          image: 'https://images.unsplash.com/photo-1565043589221-1a6fd9ae45c7?q=80&w=150&h=150&auto=format&fit=crop',
          rating: 5
        },
        {
          name: 'PremiumAuto',
          position: '–î–∏–ª–µ—Ä –ø—Ä–µ–º–∏–∞–ª—å–Ω—ã—Ö –±—Ä–µ–Ω–¥–æ–≤',
          quote: 'Car-Sale –ø–æ–º–æ–≥–ª–∞ –Ω–∞–º —Å–æ–∑–¥–∞—Ç—å –ø—Ä–µ–º–∏–∞–ª—å–Ω—ã–π –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–π –æ–ø—ã—Ç, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Å—Ç–∞—Ç—É—Å—É –ø—Ä–æ–¥–∞–≤–∞–µ–º—ã—Ö –Ω–∞–º–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –æ–±—Ä–∞—â–µ–Ω–∏–π –≤—ã—Ä–æ—Å–ª–æ –Ω–∞ 40%.',
          image: 'https://images.unsplash.com/photo-1568992687947-868a62a9f521?q=80&w=150&h=150&auto=format&fit=crop',
          rating: 5
        },
        {
          name: 'AutoFinGroup',
          position: '–õ–∏–∑–∏–Ω–≥–æ–≤–∞—è –∫–æ–º–ø–∞–Ω–∏—è',
          quote: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Car-Sale –ø–æ–∑–≤–æ–ª–∏–ª–∞ –Ω–∞–º —Å–æ–∫—Ä–∞—Ç–∏—Ç—å —Ü–∏–∫–ª –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ª–∏–∑–∏–Ω–≥–æ–≤–æ–π —Å–¥–µ–ª–∫–∏ —Å 5 –¥–Ω–µ–π –¥–æ 1 –¥–Ω—è, —á—Ç–æ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –ø–æ–≤—ã—Å–∏–ª–æ –∫–æ–Ω–≤–µ—Ä—Å–∏—é –∏ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤.',
          image: 'https://images.unsplash.com/photo-1572025442646-866d16c84a54?q=80&w=150&h=150&auto=format&fit=crop',
          rating: 4
        }
      ]
    },
    cta: {
      title: '–ì–æ—Ç–æ–≤—ã —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à –∞–≤—Ç–æ–±–∏–∑–Ω–µ—Å?',
      description: '–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, –∫–∞–∫ Car-Sale –º–æ–∂–µ—Ç —Ä–µ—à–∏—Ç—å –∑–∞–¥–∞—á–∏ –∏–º–µ–Ω–Ω–æ –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞',
      primaryButton: '–ó–∞–ø—Ä–æ—Å–∏—Ç—å –¥–µ–º–æ',
      secondaryButton: '–°–≤—è–∑–∞—Ç—å—Å—è —Å —ç–∫—Å–ø–µ—Ä—Ç–æ–º'
    }
  },
  en: {
    // –ê–Ω–≥–ª–∏–π—Å–∫–∞—è –≤–µ—Ä—Å–∏—è (–∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ —Ä—É—Å—Å–∫–æ–π)
  },
  uz: {
    // –£–∑–±–µ–∫—Å–∫–∞—è –≤–µ—Ä—Å–∏—è (–∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ —Ä—É—Å—Å–∫–æ–π)
  }
};

// –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç-–∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
const CircleIndicator = ({ color, active, initial }) => {
  return (
    <div className="relative h-4 w-4">
      <div className={`absolute inset-0 rounded-full bg-white/80 dark:bg-gray-800/80 shadow-sm border ${active ? 'border-primary dark:border-primary-light' : 'border-gray-300 dark:border-gray-600'}`}></div>
      <AnimatePresence>
        {active && (
          <motion.div
            initial={{ scale: initial ? 1 : 0 }}
            animate={{ scale: 1 }}
            exit={{ scale: 0 }}
            className="absolute inset-0 rounded-full"
            style={{ backgroundColor: color }}
          ></motion.div>
        )}
      </AnimatePresence>
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ—è–≤–ª–µ–Ω–∏—è —á–∏—Å–µ–ª
const AnimatedCounter = ({ value, suffix = '', duration = 1.5 }) => {
  const [displayValue, setDisplayValue] = useState(0);
  const [started, setStarted] = useState(false);
  const ref = useRef(null);
  const isInView = useInView(ref, { once: true, margin: '-100px' });
  
  useEffect(() => {
    if (isInView && !started) {
      setStarted(true);
      let startTimestamp;
      const step = (timestamp) => {
        if (!startTimestamp) startTimestamp = timestamp;
        const progress = Math.min((timestamp - startTimestamp) / (duration * 1000), 1);
        setDisplayValue(Math.floor(progress * value));
        if (progress < 1) {
          window.requestAnimationFrame(step);
        } else {
          setDisplayValue(value);
        }
      };
      window.requestAnimationFrame(step);
    }
  }, [isInView, value, duration, started]);

  return <span ref={ref}>{displayValue}{suffix}</span>;
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏ (3D —ç—Ñ—Ñ–µ–∫—Ç)
const TiltCard = ({ children, className }) => {
  const cardRef = useRef(null);
  const [rotation, setRotation] = useState({ x: 0, y: 0 });
  const [isHovering, setIsHovering] = useState(false);
  
  const handleMouseMove = (e) => {
    if (!cardRef.current) return;
    
    const card = cardRef.current;
    const rect = card.getBoundingClientRect();
    const centerX = rect.left + rect.width / 2;
    const centerY = rect.top + rect.height / 2;
    
    const mouseX = e.clientX;
    const mouseY = e.clientY;
    
    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —É–≥–æ–ª –Ω–∞–∫–ª–æ–Ω–∞ (–º–∞–∫—Å–∏–º—É–º 15 –≥—Ä–∞–¥—É—Å–æ–≤)
    const rotateY = ((mouseX - centerX) / (rect.width / 2)) * 5;
    const rotateX = ((centerY - mouseY) / (rect.height / 2)) * 5;
    
    setRotation({ x: rotateX, y: rotateY });
  };
  
  const handleMouseEnter = () => {
    setIsHovering(true);
  };
  
  const handleMouseLeave = () => {
    setIsHovering(false);
    setRotation({ x: 0, y: 0 });
  };
  
  return (
    <motion.div
      ref={cardRef}
      className={`relative ${className}`}
      onMouseMove={handleMouseMove}
      onMouseEnter={handleMouseEnter}
      onMouseLeave={handleMouseLeave}
      style={{
        transformStyle: 'preserve-3d',
      }}
      animate={{
        rotateX: rotation.x,
        rotateY: rotation.y,
        scale: isHovering ? 1.02 : 1,
      }}
      transition={{
        type: 'spring',
        damping: 20,
        stiffness: 300,
      }}
    >
      <div style={{ transform: 'translateZ(20px)' }}>
        {children}
      </div>
      
      {/* –≠—Ñ—Ñ–µ–∫—Ç —Å–≤–µ—á–µ–Ω–∏—è –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ */}
      <motion.div
        className="absolute inset-0 rounded-xl"
        animate={{
          boxShadow: isHovering 
            ? '0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04), 0 0 15px 2px rgba(123, 44, 191, 0.15)'
            : '0 5px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)'
        }}
        style={{
          zIndex: -1,
        }}
      />
    </motion.div>
  );
};

// –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã "–î–ª—è –∫–æ–≥–æ —ç—Ç–æ"
export default function ForWhomPage() {
  const { currentLocale } = useLanguageStore();
  const { hapticFeedback } = useTelegram();
  const [activeSegment, setActiveSegment] = useState('dealers');
  const [mounted, setMounted] = useState(false);
  
  // –ü–æ–ª—É—á–∞–µ–º –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
  const t = localization[currentLocale || 'ru'] || localization.ru;
  
  // –î–ª—è —Å–∫—Ä–æ–ª–ª–∏–Ω–≥–∞ –∫ —Å–µ–∫—Ü–∏—è–º
  const segmentsRef = useRef(null);
  const testimonialsRef = useRef(null);
  
  useEffect(() => {
    setMounted(true);
  }, []);
  
  const handleSegmentClick = (id) => {
    if (hapticFeedback) hapticFeedback('selection');
    setActiveSegment(id);
  };
  
  // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —Å–µ–≥–º–µ–Ω—Ç
  const activeSegmentData = t.segments.list.find(segment => segment.id === activeSegment);
  
  // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ (–¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏)
  const statistics = {
    dealers: [
      { value: 35, label: '–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–∂', suffix: '%' },
      { value: 150, label: '–°—Ä–µ–¥–Ω–µ–µ —á–∏—Å–ª–æ —Å–¥–µ–ª–æ–∫ –≤ –º–µ—Å—è—Ü', suffix: '' },
      { value: 98, label: '–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤', suffix: '%' }
    ],
    showrooms: [
      { value: 40, label: '–°–æ–∫—Ä–∞—â–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è', suffix: '%' },
      { value: 280, label: '–ê–≤—Ç–æ–º–æ–±–∏–ª–µ–π –≤ –∫–∞—Ç–∞–ª–æ–≥–µ', suffix: '+' },
      { value: 2, label: '–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏', suffix: ' —á' }
    ],
    finance: [
      { value: 25, label: '–†–æ—Å—Ç –æ–¥–æ–±—Ä–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫', suffix: '%' },
      { value: 30, label: '–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è –∑–∞—è–≤–∫–∏', suffix: ' –º–∏–Ω' },
      { value: 75, label: '–ö–æ–Ω–≤–µ—Ä—Å–∏—è –≤ –≤—ã–¥–∞–Ω–Ω—ã–µ –∫—Ä–µ–¥–∏—Ç—ã', suffix: '%' }
    ],
    importers: [
      { value: 20, label: '–£—Å–∫–æ—Ä–µ–Ω–∏–µ –ø–æ—Å—Ç–∞–≤–æ–∫', suffix: '%' },
      { value: 15, label: '–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –æ–±–æ—Ä–æ—Ç–∞', suffix: '%' },
      { value: 95, label: '–¢–æ—á–Ω–æ—Å—Ç—å –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ø—Ä–æ—Å–∞', suffix: '%' }
    ],
    service: [
      { value: 30, label: '–†–æ—Å—Ç –ø—Ä–æ–ø—É—Å–∫–Ω–æ–π —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏', suffix: '%' },
      { value: 45, label: '–£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å—Ä–µ–¥–Ω–µ–≥–æ —á–µ–∫–∞', suffix: '%' },
      { value: 90, label: '–ü–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤', suffix: '%' }
    ],
    marketplace: [
      { value: 45, label: '–†–æ—Å—Ç –ø—Ä–æ–¥–∞–∂ —á–µ—Ä–µ–∑ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É', suffix: '%' },
      { value: 5000, label: '–ê–≤—Ç–æ–º–æ–±–∏–ª–µ–π –≤ –∫–∞—Ç–∞–ª–æ–≥–µ', suffix: '+' },
      { value: 200, label: '–ù–æ–≤—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π –µ–∂–µ–¥–Ω–µ–≤–Ω–æ', suffix: '+' }
    ]
  };
  
  // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–µ–≥–º–µ–Ω—Ç–∞
  const getSegmentColor = (id) => {
    const segment = t.segments.list.find(segment => segment.id === id);
    return segment ? segment.color : '#7B2CBF';
  };
  
  if (!mounted) {
    return null;
  }
  
  return (
    <div className="relative overflow-hidden page-scrollable">
      {/* –§–æ–Ω–æ–≤—ã–µ –≥—Ä–∞–¥–∏–µ–Ω—Ç—ã */}
      <div className="absolute inset-0 bg-gradient-to-br from-primary-light/10 via-white to-accent/10 dark:from-primary-dark/20 dark:via-black dark:to-primary-dark/5"></div>
      <div className="absolute top-20 right-[10%] w-64 h-64 bg-primary/20 dark:bg-primary/10 rounded-full blur-3xl opacity-70"></div>
      <div className="absolute bottom-20 left-[5%] w-72 h-72 bg-accent/20 dark:bg-primary-dark/10 rounded-full blur-3xl opacity-70"></div>
      
      {/* –ì–µ—Ä–æ–π-—Å–µ–∫—Ü–∏—è */}
{/* –í–≤–æ–¥–Ω–∞—è —Å–µ–∫—Ü–∏—è - –æ–±–∑–æ—Ä —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–±–∏–∑–Ω–µ—Å–∞ */}
<section className="pt-8 sm:pt-16 pb-16 sm:pb-24 px-4 relative">
  <div className="container mx-auto">
    {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
    <div className="text-center mb-12">
      <motion.h1 
        className="text-3xl sm:text-4xl lg:text-5xl font-bold text-gray-900 dark:text-white mb-4"
        initial={{ opacity: 0, y: -20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.6 }}
      >
        <span className="text-primary dark:text-primary-light">{t.hero.title}</span>
      </motion.h1>
      
      <motion.p 
        className="text-base sm:text-lg text-gray-700 dark:text-gray-300 max-w-2xl mx-auto mb-8"
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ duration: 0.6, delay: 0.2 }}
      >
        {t.hero.description}
      </motion.p>
      
      <motion.div
        className="flex flex-wrap justify-center gap-3 mb-10"
        initial={{ opacity: 0, y: 10 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5, delay: 0.3 }}
      >
        {t.segments.list.slice(0, 6).map((segment, index) => (
          <span 
            key={index}
            className="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-gray-100 dark:bg-gray-800 text-gray-800 dark:text-gray-200"
          >
            <span className="mr-1.5">{segment.icon}</span>
            {segment.name}
          </span>
        ))}
      </motion.div>
    </div>
    
    {/* –°—Ö–µ–º–∞ —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–±–∏–∑–Ω–µ—Å–∞ */}
    <motion.div 
      className="max-w-4xl mx-auto bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-100 dark:border-gray-700 p-6 mb-10"
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.6, delay: 0.4 }}
    >
      <h2 className="text-xl font-bold text-gray-900 dark:text-white mb-6 text-center">
        –≠–∫–æ—Å–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞
      </h2>
      
      <div className="relative">
        {/* –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç - Car-Sale */}
        <div className="flex justify-center mb-12">
          <div className="w-36 h-36 rounded-full bg-primary shadow-lg flex items-center justify-center relative">
            <div className="text-center text-white">
              <div className="text-lg font-bold">Car-Sale</div>
              <div className="text-xs mt-1">–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏</div>
            </div>
            
            {/* –ü—É–ª—å—Å–∏—Ä—É—é—â–µ–µ –∫–æ–ª—å—Ü–æ */}
            <motion.div 
              className="absolute inset-0 rounded-full border-2 border-primary/30"
              animate={{ 
                scale: [1, 1.1, 1],
                opacity: [0.7, 0.4, 0.7]
              }}
              transition={{ duration: 3, repeat: Infinity, ease: "easeInOut" }}
            ></motion.div>
          </div>
        </div>
        
        {/* –ì—Ä—É–ø–ø—ã —Å–µ–≥–º–µ–Ω—Ç–æ–≤ - –≤ –≤–∏–¥–µ –±–ª–æ–∫-—Å—Ö–µ–º—ã */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
          {/* –õ–µ–≤–∞—è –≥—Ä—É–ø–ø–∞ */}
          <div className="space-y-4">
            <div className="bg-gray-50 dark:bg-gray-700/30 rounded-lg p-4 border-l-4 border-blue-500">
              <h3 className="font-bold text-gray-900 dark:text-white flex items-center">
                <span className="mr-2">üè¢</span>
                –ü–æ—Å—Ç–∞–≤—â–∏–∫–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
              </h3>
              <ul className="text-sm text-gray-600 dark:text-gray-400 mt-2 pl-6 list-disc">
                <li>–ò–º–ø–æ—Ä—Ç–µ—Ä—ã –∏ –¥–∏—Å—Ç—Ä–∏–±—å—é—Ç–æ—Ä—ã</li>
                <li>–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π</li>
              </ul>
            </div>
            
            <div className="bg-gray-50 dark:bg-gray-700/30 rounded-lg p-4 border-l-4 border-amber-500">
              <h3 className="font-bold text-gray-900 dark:text-white flex items-center">
                <span className="mr-2">üîß</span>
                –°–µ—Ä–≤–∏—Å–Ω—ã–µ —Ü–µ–Ω—Ç—Ä—ã
              </h3>
              <ul className="text-sm text-gray-600 dark:text-gray-400 mt-2 pl-6 list-disc">
                <li>–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã</li>
                <li>–ù–µ–∑–∞–≤–∏—Å–∏–º—ã–µ –º–∞—Å—Ç–µ—Ä—Å–∫–∏–µ</li>
              </ul>
            </div>
          </div>
          
          {/* –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –≥—Ä—É–ø–ø–∞ */}
          <div className="space-y-4">
            <div className="bg-gray-50 dark:bg-gray-700/30 rounded-lg p-4 border-l-4 border-purple-500">
              <h3 className="font-bold text-gray-900 dark:text-white flex items-center">
                <span className="mr-2">üöó</span>
                –ê–≤—Ç–æ–¥–∏–ª–µ—Ä—ã
              </h3>
              <ul className="text-sm text-gray-600 dark:text-gray-400 mt-2 pl-6 list-disc">
                <li>–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–∏</li>
                <li>–ú—É–ª—å—Ç–∏–±—Ä–µ–Ω–¥–æ–≤—ã–µ —Å–∞–ª–æ–Ω—ã</li>
              </ul>
            </div>
            
            <div className="bg-gray-50 dark:bg-gray-700/30 rounded-lg p-4 border-l-4 border-green-500">
              <h3 className="font-bold text-gray-900 dark:text-white flex items-center">
                <span className="mr-2">üè¢</span>
                –ê–≤—Ç–æ—Å–∞–ª–æ–Ω—ã
              </h3>
              <ul className="text-sm text-gray-600 dark:text-gray-400 mt-2 pl-6 list-disc">
                <li>–ü—Ä–æ–¥–∞–∂–∞ –Ω–æ–≤—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π</li>
                <li>–ü—Ä–æ–¥–∞–∂–∞ –±/—É –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π</li>
              </ul>
            </div>
          </div>
          
          {/* –ü—Ä–∞–≤–∞—è –≥—Ä—É–ø–ø–∞ */}
          <div className="space-y-4">
            <div className="bg-gray-50 dark:bg-gray-700/30 rounded-lg p-4 border-l-4 border-yellow-500">
              <h3 className="font-bold text-gray-900 dark:text-white flex items-center">
                <span className="mr-2">üí∞</span>
                –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
              </h3>
              <ul className="text-sm text-gray-600 dark:text-gray-400 mt-2 pl-6 list-disc">
                <li>–ë–∞–Ω–∫–∏ –∏ –∫—Ä–µ–¥–∏—Ç–Ω—ã–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏</li>
                <li>–õ–∏–∑–∏–Ω–≥–æ–≤—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏</li>
              </ul>
            </div>
            
            <div className="bg-gray-50 dark:bg-gray-700/30 rounded-lg p-4 border-l-4 border-indigo-500">
              <h3 className="font-bold text-gray-900 dark:text-white flex items-center">
                <span className="mr-2">üåê</span>
                –ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—ã
              </h3>
              <ul className="text-sm text-gray-600 dark:text-gray-400 mt-2 pl-6 list-disc">
                <li>–û–Ω–ª–∞–π–Ω-–ø–ª–æ—â–∞–¥–∫–∏ –∞–≤—Ç–æ</li>
                <li>–ê–≥—Ä–µ–≥–∞—Ç–æ—Ä—ã –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π</li>
              </ul>
            </div>
          </div>
        </div>
        
        {/* –°–æ–µ–¥–∏–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ª–∏–Ω–∏–∏ */}
        <div className="absolute inset-0 pointer-events-none hidden md:block">
          {/* –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–µ –ª–∏–Ω–∏–∏ –∫ —Ü–µ–Ω—Ç—Ä—É */}
          <div className="absolute left-1/6 top-[160px] bottom-0 w-px bg-gray-200 dark:bg-gray-700"></div>
          <div className="absolute left-1/2 top-[160px] bottom-0 w-px bg-gray-200 dark:bg-gray-700"></div>
          <div className="absolute left-5/6 top-[160px] bottom-0 w-px bg-gray-200 dark:bg-gray-700"></div>
          
          {/* –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è –ª–∏–Ω–∏—è */}
          <div className="absolute left-1/6 right-5/6 top-[160px] h-px bg-gray-200 dark:bg-gray-700"></div>
        </div>
      </div>
      
      <p className="text-gray-600 dark:text-gray-400 text-center mt-8">
        Car-Sale –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω–æ–≥–æ —Ä—ã–Ω–∫–∞ –≤ –µ–¥–∏–Ω—É—é —ç–∫–æ—Å–∏—Å—Ç–µ–º—É, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤.
      </p>
    </motion.div>
    
    {/* –ö–ª—é—á–µ–≤—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ - –∫—Ä–∞—Ç–∫–æ */}
    <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-10">
      <motion.div 
        className="bg-white dark:bg-gray-800 rounded-xl shadow-md p-6 border border-gray-100 dark:border-gray-700"
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5, delay: 0.5 }}
      >
        <div className="w-12 h-12 bg-blue-100 dark:bg-blue-900/30 rounded-lg flex items-center justify-center mb-4">
          <svg className="w-6 h-6 text-blue-600 dark:text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
          </svg>
        </div>
        <h3 className="text-lg font-bold text-gray-900 dark:text-white mb-2">–ï–¥–∏–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞</h3>
        <p className="text-gray-600 dark:text-gray-400">
          –í—Å–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ–±–∏–∑–Ω–µ—Å–æ–º –≤ –æ–¥–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏, –æ—Ç —Å–∫–ª–∞–¥–∞ –¥–æ –ø—Ä–æ–¥–∞–∂ –∏ —Å–µ—Ä–≤–∏—Å–∞.
        </p>
      </motion.div>
      
      <motion.div 
        className="bg-white dark:bg-gray-800 rounded-xl shadow-md p-6 border border-gray-100 dark:border-gray-700"
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5, delay: 0.6 }}
      >
        <div className="w-12 h-12 bg-green-100 dark:bg-green-900/30 rounded-lg flex items-center justify-center mb-4">
          <svg className="w-6 h-6 text-green-600 dark:text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
        </div>
        <h3 className="text-lg font-bold text-gray-900 dark:text-white mb-2">–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤</h3>
        <p className="text-gray-600 dark:text-gray-400">
          –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Ä—É—Ç–∏–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –∏ —É—Å–∫–æ—Ä–µ–Ω–∏–µ –≤—Å–µ—Ö —ç—Ç–∞–ø–æ–≤ —Ä–∞–±–æ—Ç—ã —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏ –∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è–º–∏.
        </p>
      </motion.div>
      
      <motion.div 
        className="bg-white dark:bg-gray-800 rounded-xl shadow-md p-6 border border-gray-100 dark:border-gray-700"
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5, delay: 0.7 }}
      >
        <div className="w-12 h-12 bg-purple-100 dark:bg-purple-900/30 rounded-lg flex items-center justify-center mb-4">
          <svg className="w-6 h-6 text-purple-600 dark:text-purple-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M11 3.055A9.001 9.001 0 1020.945 13H11V3.055z" />
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M20.488 9H15V3.512A9.025 9.025 0 0120.488 9z" />
          </svg>
        </div>
        <h3 className="text-lg font-bold text-gray-900 dark:text-white mb-2">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –æ—Ç—á—ë—Ç—ã</h3>
        <p className="text-gray-600 dark:text-gray-400">
          –î–µ—Ç–∞–ª—å–Ω–∞—è –±–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ–º–æ–∂–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –∏ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏.
        </p>
      </motion.div>
    </div>
    
    {/* –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */}
    <div className="flex flex-col sm:flex-row justify-center gap-4">
      <motion.button
        className="px-6 py-3 bg-primary hover:bg-primary-dark text-white font-medium rounded-lg shadow-md inline-flex items-center justify-center"
        whileHover={{ scale: 1.03 }}
        whileTap={{ scale: 0.98 }}
        onClick={() => segmentsRef.current?.scrollIntoView({ behavior: 'smooth' })}
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5, delay: 0.8 }}
      >
        –ò–∑—É—á–∏—Ç—å —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –±–∏–∑–Ω–µ—Å–∞
        <ArrowRightIcon className="w-5 h-5 ml-2" />
      </motion.button>
      
      <motion.button
        className="px-6 py-3 bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-300 border border-gray-200 dark:border-gray-700 font-medium rounded-lg inline-flex items-center justify-center"
        whileHover={{ scale: 1.03 }}
        whileTap={{ scale: 0.98 }}
        onClick={() => testimonialsRef.current?.scrollIntoView({ behavior: 'smooth' })}
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5, delay: 0.9 }}
      >
        <svg className="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z" />
        </svg>
        –ò—Å—Ç–æ—Ä–∏–∏ —É—Å–ø–µ—Ö–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤
      </motion.button>
    </div>
  </div>
  
  {/* CSS –¥–ª—è –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è */}
  <style jsx>{`
    .left-1/6 {
      left: 16.666667%;
    }
    
    .left-5/6 {
      left: 83.333333%;
    }
    
    .right-5/6 {
      right: 83.333333%;
    }
  `}</style>
</section>
      
      {/* –¶–µ–ª–µ–≤—ã–µ —Å–µ–≥–º–µ–Ω—Ç—ã - —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–∞–∑–¥–µ–ª */}
      <section 
        ref={segmentsRef}
        className="py-16 px-4 bg-gray-50 dark:bg-gray-900/50 relative overflow-hidden"
      >
        <div className="container mx-auto">
          <motion.div 
            className="text-center mb-12"
            initial={{ opacity: 0 }}
            whileInView={{ opacity: 1 }}
            viewport={{ once: true }}
            transition={{ duration: 0.8 }}
          >
            <h2 className="text-3xl sm:text-4xl font-bold text-gray-900 dark:text-white mb-4">
              {t.segments.title}
            </h2>
            <motion.div
              initial={{ width: 0 }}
              whileInView={{ width: "80px" }}
              viewport={{ once: true }}
              transition={{ duration: 0.8, delay: 0.4 }}
              className="h-1 bg-primary mx-auto rounded-full mb-6"
            />
            <p className="text-gray-600 dark:text-gray-300 max-w-3xl mx-auto mb-10">
              {t.segments.description}
            </p>
          </motion.div>
          
          <div className="grid grid-cols-1 lg:grid-cols-12 gap-8 mb-12">
            {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å–µ–≥–º–µ–Ω—Ç–∞–º - –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è –Ω–∞ –±–æ–ª—å—à–∏—Ö —ç–∫—Ä–∞–Ω–∞—Ö, –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö */}
            <div className="lg:col-span-3">
              <div className="lg:sticky lg:top-24">
                <div className="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-4 border border-gray-100 dark:border-gray-700">
                  <h3 className="text-xl font-bold text-gray-900 dark:text-white mb-4">–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ–≥–º–µ–Ω—Ç</h3>
                  
                  {/* –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –±–æ–ª—å—à–∏—Ö —ç–∫—Ä–∞–Ω–æ–≤ */}
                  <div className="hidden lg:block space-y-2">
                    {t.segments.list.map((segment) => (
                      <motion.button
                        key={segment.id}
                        className={`w-full text-left py-3 px-4 rounded-lg flex items-center transition-all ${
                          activeSegment === segment.id 
                            ? 'bg-primary/10 dark:bg-primary/20 text-primary dark:text-primary-light' 
                            : 'hover:bg-gray-100 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-300'
                        }`}
                        onClick={() => handleSegmentClick(segment.id)}
                        whileHover={{ x: activeSegment === segment.id ? 0 : 5 }}
                        whileTap={{ scale: 0.98 }}
                      >
                        <div className="flex items-center">
                          <div 
                            className="w-10 h-10 rounded-lg flex items-center justify-center mr-3" 
                            style={{ 
                              backgroundColor: activeSegment === segment.id 
                                ? `${segment.color}30` 
                                : 'rgba(209, 213, 219, 0.3)' 
                            }}
                          >
                            <span className="text-2xl">{segment.icon}</span>
                          </div>
                          <span className="font-medium">{segment.name}</span>
                        </div>
                        
                        {/* –ê–∫—Ç–∏–≤–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä */}
                        {activeSegment === segment.id && (
                          <motion.div 
                            className="ml-auto w-2 h-10 rounded-full" 
                            style={{ backgroundColor: segment.color }}
                            layoutId="activeSegmentIndicator"
                          />
                        )}
                      </motion.button>
                    ))}
                  </div>
                  
                  {/* –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Å–∫—Ä–æ–ª–ª-–º–µ–Ω—é –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö */}
                  <div className="lg:hidden overflow-x-auto flex space-x-2 pb-2 no-scrollbar">
                    {t.segments.list.map((segment) => (
                      <motion.button
                        key={segment.id}
                        className={`flex-shrink-0 py-2 px-4 rounded-lg flex items-center transition-all ${
                          activeSegment === segment.id 
                            ? 'bg-primary/10 dark:bg-primary/20 text-primary dark:text-primary-light' 
                            : 'bg-gray-50 dark:bg-gray-700 text-gray-700 dark:text-gray-300'
                        }`}
                        style={{ 
                          borderLeft: activeSegment === segment.id 
                            ? `3px solid ${segment.color}` 
                            : '3px solid transparent' 
                        }}
                        onClick={() => handleSegmentClick(segment.id)}
                        whileTap={{ scale: 0.95 }}
                      >
                        <span className="text-xl mr-2">{segment.icon}</span>
                        <span className="whitespace-nowrap font-medium">{segment.name}</span>
                      </motion.button>
                    ))}
                  </div>
                </div>
                
                {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å–µ–≥–º–µ–Ω—Ç—É */}
                <motion.div 
                  className="bg-white dark:bg-gray-800 rounded-xl shadow-lg mt-4 p-4 border border-gray-100 dark:border-gray-700 hidden lg:block"
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  viewport={{ once: true }}
                  transition={{ duration: 0.5 }}
                >
                  <h3 className="text-lg font-bold text-gray-900 dark:text-white mb-4">–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–µ—à–µ–Ω–∏—è</h3>
                  
                  <div className="space-y-4">
                    {statistics[activeSegment]?.map((stat, index) => (
                      <div key={index}>
                        <div className="flex justify-between items-center mb-1">
                          <span className="text-sm text-gray-600 dark:text-gray-400">{stat.label}</span>
                          <span className="text-lg font-bold" style={{ color: getSegmentColor(activeSegment) }}>
                            <AnimatedCounter value={stat.value} suffix={stat.suffix} />
                          </span>
                        </div>
                        <div className="w-full h-2 bg-gray-100 dark:bg-gray-700 rounded-full overflow-hidden">
                          <motion.div 
                            className="h-full rounded-full"
                            style={{ backgroundColor: getSegmentColor(activeSegment) }}
                            initial={{ width: 0 }}
                            animate={{ width: `${(stat.value / 100) * 100}%` }}
                            transition={{ duration: 1, delay: index * 0.2 }}
                          />
                        </div>
                      </div>
                    ))}
                  </div>
                </motion.div>
              </div>
            </div>
            
            {/* –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ–≥–º–µ–Ω—Ç–µ */}
            <div className="lg:col-span-9">
              <AnimatePresence mode="wait">
                <motion.div
                  key={activeSegment}
                  initial={{ opacity: 0, x: 30 }}
                  animate={{ opacity: 1, x: 0 }}
                  exit={{ opacity: 0, x: -30 }}
                  transition={{ duration: 0.5 }}
                  className="bg-white dark:bg-gray-800 rounded-xl shadow-xl overflow-hidden border border-gray-100 dark:border-gray-700"
                >
                  {/* –í–µ—Ä—Ö–Ω—è—è —Ü–≤–µ—Ç–Ω–∞—è –ø–æ–ª–æ—Å–∞ */}
                  <div className="h-2" style={{ backgroundColor: getSegmentColor(activeSegment) }}></div>
                  
                  <div className="p-6 sm:p-8">
                    <div className="flex items-center mb-6">
                      <div 
                        className="w-16 h-16 rounded-xl flex items-center justify-center mr-4" 
                        style={{ backgroundColor: `${getSegmentColor(activeSegment)}20` }}
                      >
                        <span className="text-3xl">{activeSegmentData?.icon}</span>
                      </div>
                      <div>
                        <h3 className="text-2xl sm:text-3xl font-bold text-gray-900 dark:text-white">
                          {activeSegmentData?.name}
                        </h3>
                        <div className="flex space-x-1 mt-1">
                          {t.segments.list.map((segment, index) => (
                            <button 
                              key={index}
                              onClick={() => handleSegmentClick(segment.id)}
                              className="outline-none focus:outline-none"
                              aria-label={`Switch to ${segment.name}`}
                            >
                              <CircleIndicator 
                                color={segment.color} 
                                active={activeSegment === segment.id} 
                                initial={index === 0}
                              />
                            </button>
                          ))}
                        </div>
                      </div>
                    </div>
                    
                    <p className="text-gray-700 dark:text-gray-300 text-lg mb-8">
                      {activeSegmentData?.description}
                    </p>
                    
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-8 mb-8">
                      {/* –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ */}
                      <div>
                        <h4 className="text-lg font-bold text-gray-900 dark:text-white mb-4 flex items-center">
                          <CheckCircleIcon className="w-5 h-5 mr-2 text-primary dark:text-primary-light" />
                          –ö–ª—é—á–µ–≤—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –¥–ª—è {activeSegmentData?.name.toLowerCase()}
                        </h4>
                        
                        <div className="space-y-3">
                          {activeSegmentData?.benefits.map((benefit, index) => (
                            <motion.div 
                              key={index}
                              className="flex items-start"
                              initial={{ opacity: 0, x: -10 }}
                              animate={{ opacity: 1, x: 0 }}
                              transition={{ duration: 0.5, delay: index * 0.1 }}
                            >
                              <div 
                                className="w-6 h-6 rounded-full flex items-center justify-center mt-0.5 mr-3 flex-shrink-0" 
                                style={{ backgroundColor: `${getSegmentColor(activeSegment)}20` }}
                              >
                                <svg 
                                  className="w-4 h-4" 
                                  style={{ color: getSegmentColor(activeSegment) }}
                                  fill="none" 
                                  stroke="currentColor" 
                                  viewBox="0 0 24 24"
                                >
                                  <path 
                                    strokeLinecap="round" 
                                    strokeLinejoin="round" 
                                    strokeWidth="2" 
                                    d="M5 13l4 4L19 7" 
                                  />
                                </svg>
                              </div>
                              <p className="text-gray-700 dark:text-gray-300">{benefit}</p>
                            </motion.div>
                          ))}
                        </div>
                      </div>
                      
                      {/* –ü—Ä–∏–º–µ—Ä –≤–Ω–µ–¥—Ä–µ–Ω–∏—è */}
                      <div>
                        <h4 className="text-lg font-bold text-gray-900 dark:text-white mb-4 flex items-center">
                          <svg 
                            className="w-5 h-5 mr-2" 
                            style={{ color: getSegmentColor(activeSegment) }}
                            fill="none" 
                            stroke="currentColor" 
                            viewBox="0 0 24 24"
                          >
                            <path 
                              strokeLinecap="round" 
                              strokeLinejoin="round" 
                              strokeWidth="2" 
                              d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z" 
                            />
                          </svg>
                          –ö–µ–π—Å –≤–Ω–µ–¥—Ä–µ–Ω–∏—è
                        </h4>
                        
                        <TiltCard className="bg-gradient-to-br from-white to-gray-100 dark:from-gray-800 dark:to-gray-900 rounded-xl p-5 shadow-md">
                          <div className="space-y-3">
                            <div 
                              className="text-lg font-bold mb-2" 
                              style={{ color: getSegmentColor(activeSegment) }}
                            >
                              {activeSegmentData?.caseStudy.company}
                            </div>
                            
                            <div className="flex items-center mb-3">
                              <div 
                                className="w-8 h-8 rounded-full flex items-center justify-center mr-2"
                                style={{ backgroundColor: `${getSegmentColor(activeSegment)}20` }}
                              >
                                <svg 
                                  className="w-4 h-4" 
                                  style={{ color: getSegmentColor(activeSegment) }}
                                  fill="none" 
                                  stroke="currentColor" 
                                  viewBox="0 0 24 24"
                                >
                                  <path 
                                    strokeLinecap="round" 
                                    strokeLinejoin="round" 
                                    strokeWidth="2" 
                                    d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6" 
                                  />
                                </svg>
                              </div>
                              <span className="text-gray-700 dark:text-gray-300 font-medium">
                                {activeSegmentData?.caseStudy.result}
                              </span>
                            </div>
                            
                            <div className="relative pl-8 italic text-gray-600 dark:text-gray-400">
                              <svg 
                                className="absolute top-0 left-0 w-6 h-6 text-gray-300 dark:text-gray-600"
                                fill="currentColor" 
                                viewBox="0 0 24 24"
                              >
                                <path d="M7.5 6.75V15h-1.5V6.75H1.5v-1.5h6v1.5zm9 0V15h-1.5V6.75H10.5v-1.5h6v1.5z" />
                              </svg>
                              
                              <p>{activeSegmentData?.caseStudy.quote}</p>
                              
                              <p className="mt-2 not-italic text-sm text-gray-500 dark:text-gray-500">
                                ‚Äî {activeSegmentData?.caseStudy.author}
                              </p>
                            </div>
                          </div>
                        </TiltCard>
                        
                        <motion.div
                          className="mt-4 text-center"
                          whileHover={{ scale: 1.05 }}
                          whileTap={{ scale: 0.95 }}
                        >
                          <button
                            className="inline-flex items-center py-2 px-4 rounded-lg bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors"
                          >
                            <PlayIcon className="w-4 h-4 mr-2" />
                            –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ –∫–µ–π—Å–∞
                          </button>
                        </motion.div>
                      </div>
                    </div>
                    
                    {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å–µ–≥–º–µ–Ω—Ç—É –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö */}
                    <div className="lg:hidden bg-gray-50 dark:bg-gray-700/30 rounded-xl p-4 mb-6">
                      <h4 className="text-lg font-bold text-gray-900 dark:text-white mb-4">–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–µ—à–µ–Ω–∏—è</h4>
                      
                      <div className="grid grid-cols-3 gap-4">
                        {statistics[activeSegment]?.map((stat, index) => (
                          <div key={index} className="text-center">
                            <div 
                              className="text-2xl font-bold mb-1" 
                              style={{ color: getSegmentColor(activeSegment) }}
                            >
                              <AnimatedCounter value={stat.value} suffix={stat.suffix} />
                            </div>
                            <div className="text-xs text-gray-600 dark:text-gray-400">{stat.label}</div>
                          </div>
                        ))}
                      </div>
                    </div>
                    
                    {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
                    <div className="flex flex-col sm:flex-row gap-4 justify-center sm:justify-end">
                      <motion.div
                        whileHover={{ scale: 1.05 }}
                        whileTap={{ scale: 0.95 }}
                      >
                        <button 
                          className="w-full sm:w-auto px-6 py-3 bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 border border-gray-200 dark:border-gray-600 rounded-lg inline-flex items-center justify-center"
                        >
                          <svg className="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                          </svg>
                          –°–∫–∞—á–∞—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é
                        </button>
                      </motion.div>
                      
                      <motion.div
                        whileHover={{ scale: 1.05 }}
                        whileTap={{ scale: 0.95 }}
                      >
                        <button 
                          className="w-full sm:w-auto px-6 py-3 bg-primary hover:bg-primary-dark text-white rounded-lg inline-flex items-center justify-center shadow-lg shadow-primary/20"
                          style={{ backgroundColor: getSegmentColor(activeSegment) }}
                        >
                          <svg className="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M15 15l-2 5L9 9l11 4-5 2zm0 0l5 5M7.188 2.239l.777 2.897M5.136 7.965l-2.898-.777M13.95 4.05l-2.122 2.122m-5.657 5.656l-2.12 2.122" />
                          </svg>
                          –ó–∞–ø—Ä–æ—Å–∏—Ç—å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é
                        </button>
                      </motion.div>
                    </div>
                  </div>
                </motion.div>
              </AnimatePresence>
              
              {/* –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ */}
              <motion.div 
                className="mt-8 bg-white dark:bg-gray-800 rounded-xl shadow-lg overflow-hidden border border-gray-100 dark:border-gray-700"
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ duration: 0.5 }}
              >
                <div className="p-6">
                  <h3 className="text-xl font-bold text-gray-900 dark:text-white mb-6">
                    –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –¥—Ä—É–≥–∏–º–∏ —Ä–µ—à–µ–Ω–∏—è–º–∏
                  </h3>
                  
                  <div className="overflow-x-auto">
                    <table className="w-full min-w-[800px]">
                      <thead>
                        <tr className="border-b border-gray-100 dark:border-gray-700">
                          <th className="text-left py-3 px-4 text-gray-500 dark:text-gray-400 font-medium">–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å</th>
                          <th className="text-center py-3 px-4 text-primary dark:text-primary-light font-medium">
                            Car-Sale
                            <div className="text-xs font-normal mt-1">–ü–æ–ª–Ω–∞—è —ç–∫–æ—Å–∏—Å—Ç–µ–º–∞</div>
                          </th>
                          <th className="text-center py-3 px-4 text-gray-500 dark:text-gray-400 font-medium">
                            –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç –ê
                            <div className="text-xs font-normal mt-1">–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–∞—è CRM</div>
                          </th>
                          <th className="text-center py-3 px-4 text-gray-500 dark:text-gray-400 font-medium">
                            –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç –ë
                            <div className="text-xs font-normal mt-1">–°–∏—Å—Ç–µ–º–∞ —É—á–µ—Ç–∞</div>
                          </th>
                        </tr>
                      </thead>
                      <tbody>
                        {[
                          { feature: '–ü–æ–ª–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –º–æ–¥—É–ª–µ–π', carSale: true, compA: false, compB: false },
                          { feature: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∫–ª–∞–¥–æ–º –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π', carSale: true, compA: true, compB: true },
                          { feature: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã', carSale: true, compA: false, compB: true },
                          { feature: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –±–∞–Ω–∫–∞–º–∏', carSale: true, compA: true, compB: false },
                          { feature: 'API –¥–ª—è –≤–Ω–µ—à–Ω–∏—Ö —Å–∏—Å—Ç–µ–º', carSale: true, compA: false, compB: false },
                          { feature: '–ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ', carSale: true, compA: true, compB: false }
                        ].map((row, index) => (
                          <motion.tr 
                            key={index}
                            className="border-b border-gray-100 dark:border-gray-700"
                            initial={{ opacity: 0, y: 10 }}
                            whileInView={{ opacity: 1, y: 0 }}
                            viewport={{ once: true }}
                            transition={{ duration: 0.3, delay: index * 0.1 }}
                          >
                            <td className="py-3 px-4 text-gray-700 dark:text-gray-300">{row.feature}</td>
                            <td className="py-3 px-4 text-center">
                              {row.carSale ? (
                                <div className="mx-auto w-6 h-6 bg-primary/20 dark:bg-primary/30 rounded-full flex items-center justify-center">
                                  <svg className="w-4 h-4 text-primary dark:text-primary-light" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M5 13l4 4L19 7" />
                                  </svg>
                                </div>
                              ) : (
                                <div className="mx-auto w-6 h-6 bg-gray-200 dark:bg-gray-700 rounded-full flex items-center justify-center">
                                  <svg className="w-4 h-4 text-gray-400 dark:text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M6 18L18 6M6 6l12 12" />
                                  </svg>
                                </div>
                              )}
                            </td>
                            <td className="py-3 px-4 text-center">
                              {row.compA ? (
                                <div className="mx-auto w-6 h-6 bg-gray-200 dark:bg-gray-700 rounded-full flex items-center justify-center">
                                  <svg className="w-4 h-4 text-gray-500 dark:text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M5 13l4 4L19 7" />
                                  </svg>
                                </div>
                              ) : (
                                <div className="mx-auto w-6 h-6 bg-gray-200 dark:bg-gray-700 rounded-full flex items-center justify-center">
                                  <svg className="w-4 h-4 text-gray-400 dark:text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M6 18L18 6M6 6l12 12" />
                                  </svg>
                                </div>
                              )}
                            </td>
                            <td className="py-3 px-4 text-center">
                              {row.compB ? (
                                <div className="mx-auto w-6 h-6 bg-gray-200 dark:bg-gray-700 rounded-full flex items-center justify-center">
                                  <svg className="w-4 h-4 text-gray-500 dark:text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M5 13l4 4L19 7" />
                                  </svg>
                                </div>
                              ) : (
                                <div className="mx-auto w-6 h-6 bg-gray-200 dark:bg-gray-700 rounded-full flex items-center justify-center">
                                  <svg className="w-4 h-4 text-gray-400 dark:text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M6 18L18 6M6 6l12 12" />
                                  </svg>
                                </div>
                              )}
                            </td>
                          </motion.tr>
                        ))}
                      </tbody>
                    </table>
                  </div>
                </div>
              </motion.div>
            </div>
          </div>
        </div>
      </section>
      
      {/* –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è */}
      <section className="py-16 px-4 bg-white dark:bg-gray-900 relative overflow-hidden">
        <div className="container mx-auto">
         <motion.div 
            className="text-center mb-12"
            initial={{ opacity: 0 }}
            whileInView={{ opacity: 1 }}
            viewport={{ once: true }}
            transition={{ duration: 0.8 }}
          >
            <h2 className="text-3xl sm:text-4xl font-bold text-gray-900 dark:text-white mb-4">
              {t.customSolutions.title}
            </h2>
            <motion.div
              initial={{ width: 0 }}
              whileInView={{ width: "80px" }}
              viewport={{ once: true }}
              transition={{ duration: 0.8, delay: 0.4 }}
              className="h-1 bg-primary mx-auto rounded-full mb-6"
            />
            <p className="text-gray-600 dark:text-gray-300 max-w-3xl mx-auto mb-10">
              {t.customSolutions.description}
            </p>
          </motion.div>
          
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-16">
            {t.customSolutions.list.map((solution, index) => (
              <TiltCard
                key={index}
                className="bg-white dark:bg-gray-800 rounded-xl overflow-hidden shadow-lg border border-gray-100 dark:border-gray-700"
              >
                <div className="p-6">
                  <div className="flex items-center mb-4">
                    <div className="w-12 h-12 bg-primary/10 dark:bg-primary/20 rounded-full flex items-center justify-center mb-4">
                      <span className="text-2xl">{solution.icon}</span>
                    </div>
                  </div>
                  <h3 className="text-xl font-bold text-gray-900 dark:text-white mb-3">{solution.title}</h3>
                  <p className="text-gray-600 dark:text-gray-300">{solution.description}</p>
                </div>
              </TiltCard>
            ))}
          </div>
          
          {/* –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏–∏ */}
          <motion.div 
            className="bg-gradient-to-br from-primary/5 to-primary-light/5 dark:from-primary/10 dark:to-primary-light/10 rounded-2xl p-8 border border-gray-100 dark:border-gray-700 shadow-lg relative overflow-hidden"
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.6 }}
          >
            <div className="absolute -top-24 -right-24 w-48 h-48 bg-primary/10 dark:bg-primary/20 rounded-full blur-xl"></div>
            <div className="absolute -bottom-24 -left-24 w-48 h-48 bg-primary-light/10 dark:bg-primary-dark/20 rounded-full blur-xl"></div>
            
            <div className="relative z-10">
              <div className="flex flex-col lg:flex-row items-center justify-between gap-8">
                <div className="lg:w-1/2">
                  <h3 className="text-2xl font-bold text-gray-900 dark:text-white mb-4">
                    –ü—Ä–æ—Ü–µ—Å—Å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è
                  </h3>
                  <p className="text-gray-700 dark:text-gray-300 mb-6">
                    –ú—ã —Å–æ–∑–¥–∞–µ–º —Ä–µ—à–µ–Ω–∏—è, –ø–æ–ª–Ω–æ—Å—Ç—å—é –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–¥ –≤–∞—à–∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏, —Å–ª–µ–¥—É—è —á–µ—Ç–∫–æ–º—É –ø—Ä–æ—Ü–µ—Å—Å—É, –∫–æ—Ç–æ—Ä—ã–π –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
                  </p>
                  
                  <div className="space-y-4">
                    {[
                      { 
                        step: 1, 
                        title: '–ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π', 
                        description: '–î–µ—Ç–∞–ª—å–Ω–æ–µ –∏–∑—É—á–µ–Ω–∏–µ –≤–∞—à–∏—Ö –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∏ –≤—ã—è–≤–ª–µ–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π'
                      },
                      { 
                        step: 2, 
                        title: '–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ', 
                        description: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã —Ä–µ—à–µ–Ω–∏—è –∏ –ø—Ä–æ—Ç–æ—Ç–∏–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤'
                      },
                      { 
                        step: 3, 
                        title: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞', 
                        description: '–°–æ–∑–¥–∞–Ω–∏–µ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö –º–æ–¥—É–ª–µ–π –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π'
                      },
                      { 
                        step: 4, 
                        title: '–í–Ω–µ–¥—Ä–µ–Ω–∏–µ', 
                        description: '–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∏ –æ–±—É—á–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞'
                      }
                    ].map((phase, index) => (
                      <motion.div 
                        key={index}
                        className="flex items-start"
                        initial={{ opacity: 0, x: -20 }}
                        whileInView={{ opacity: 1, x: 0 }}
                        viewport={{ once: true }}
                        transition={{ duration: 0.5, delay: index * 0.1 }}
                      >
                        <div className="flex-shrink-0 w-8 h-8 bg-primary rounded-full flex items-center justify-center mr-4 text-white font-bold">
                          {phase.step}
                        </div>
                        <div>
                          <h4 className="text-lg font-bold text-gray-900 dark:text-white">{phase.title}</h4>
                          <p className="text-gray-600 dark:text-gray-400">{phase.description}</p>
                        </div>
                      </motion.div>
                    ))}
                  </div>
                </div>
                
                <div className="lg:w-1/2">
                  <div className="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 border border-gray-100 dark:border-gray-700">
                    <h4 className="text-xl font-bold text-gray-900 dark:text-white mb-6 text-center">
                      –ü—Ä–∏–º–µ—Ä—ã –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π
                    </h4>
                    
                    <div className="space-y-4">
                      {[
                        {
                          title: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å–∏—Å—Ç–µ–º–æ–π –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞',
                          client: '–ò–º–ø–æ—Ä—Ç–ê–≤—Ç–æ',
                          description: '–°–æ–∑–¥–∞–Ω–∏–µ API –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∫–ª–∞–¥—Å–∫–∏—Ö –∑–∞–ø–∞—Å–æ–≤ –ø—Ä–∏ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏ –Ω–æ–≤—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –æ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è'
                        },
                        {
                          title: '–ö–∞—Å—Ç–æ–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞',
                          client: '–ê–≤—Ç–æ–ü—Ä–µ—Å—Ç–∏–∂',
                          description: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ –¥–ª—è –æ—Ü–µ–Ω–∫–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π –∏ –∏—Ö –≤–ª–∏—è–Ω–∏—è –Ω–∞ –ø—Ä–æ–¥–∞–∂–∏'
                        },
                        {
                          title: '–ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤',
                          client: '–ü—Ä–µ–º–∏—É–º–ö–∞—Ä—Å',
                          description: '–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ –∏ –∑–∞–ø–∏—Å–∏ –Ω–∞ —Å–µ—Ä–≤–∏—Å'
                        }
                      ].map((example, index) => (
                        <motion.div 
                          key={index}
                          className="bg-gray-50 dark:bg-gray-700/30 rounded-lg p-4"
                          initial={{ opacity: 0, y: 10 }}
                          whileInView={{ opacity: 1, y: 0 }}
                          viewport={{ once: true }}
                          transition={{ duration: 0.5, delay: index * 0.1 }}
                          whileHover={{ y: -5 }}
                        >
                          <div className="flex justify-between items-start">
                            <h5 className="text-lg font-bold text-gray-900 dark:text-white">{example.title}</h5>
                            <span className="text-xs bg-primary/10 text-primary dark:bg-primary/20 dark:text-primary-light px-2 py-1 rounded">
                              {example.client}
                            </span>
                          </div>
                          <p className="text-gray-600 dark:text-gray-400 mt-2 text-sm">
                            {example.description}
                          </p>
                        </motion.div>
                      ))}
                    </div>
                    
                    <div className="mt-6 text-center">
                      <motion.button
                        className="px-6 py-3 bg-primary hover:bg-primary-dark text-white font-medium rounded-lg inline-flex items-center shadow-lg shadow-primary/20"
                        whileHover={{ scale: 1.05 }}
                        whileTap={{ scale: 0.95 }}
                      >
                        –ó–∞–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ
                      </motion.button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </motion.div>
        </div>
      </section>
      
      {/* –ò—Å—Ç–æ—Ä–∏–∏ —É—Å–ø–µ—Ö–∞ */}
      <section 
        ref={testimonialsRef}
        className="py-16 px-4 bg-gray-50 dark:bg-gray-900/50 relative overflow-hidden"
      >
        <div className="container mx-auto">
          <motion.div 
            className="text-center mb-12"
            initial={{ opacity: 0 }}
            whileInView={{ opacity: 1 }}
            viewport={{ once: true }}
            transition={{ duration: 0.8 }}
          >
            <h2 className="text-3xl sm:text-4xl font-bold text-gray-900 dark:text-white mb-4">
              {t.testimonials.title}
            </h2>
            <motion.div
              initial={{ width: 0 }}
              whileInView={{ width: "80px" }}
              viewport={{ once: true }}
              transition={{ duration: 0.8, delay: 0.4 }}
              className="h-1 bg-primary mx-auto rounded-full mb-6"
            />
            <p className="text-gray-600 dark:text-gray-300 max-w-3xl mx-auto mb-10">
              {t.testimonials.description}
            </p>
          </motion.div>
          
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8 mb-12">
            {t.testimonials.list.map((testimonial, index) => (
              <motion.div
                key={index}
                className="bg-white dark:bg-gray-800 rounded-xl shadow-lg overflow-hidden border border-gray-100 dark:border-gray-700"
                initial={{ opacity: 0, y: 30 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ duration: 0.5, delay: index * 0.2 }}
                whileHover={{ y: -10 }}
              >
                <div className="p-6">
                  <div className="flex justify-between items-center mb-4">
                    <div className="flex items-center">
                      <img src={testimonial.image} alt={testimonial.name} className="w-14 h-14 rounded-full object-cover mr-4" />
                      <div>
                        <h3 className="font-bold text-gray-900 dark:text-white">{testimonial.name}</h3>
                        <p className="text-sm text-gray-500 dark:text-gray-400">{testimonial.position}</p>
                      </div>
                    </div>
                    <div className="flex">
                      {[...Array(5)].map((_, i) => (
                        <svg 
                          key={i}
                          className={`w-5 h-5 ${i < testimonial.rating ? 'text-yellow-400' : 'text-gray-300 dark:text-gray-600'}`}
                          fill="currentColor"
                          viewBox="0 0 20 20"
                        >
                          <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                        </svg>
                      ))}
                    </div>
                  </div>
                  
                  <div className="relative">
                    <svg 
                      className="absolute -top-2 -left-2 w-8 h-8 text-gray-200 dark:text-gray-700"
                      fill="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path d="M4.583 17.321C3.553 16.227 3 15 3 13.011c0-3.5 2.457-6.637 6.03-8.188l.893 1.378c-3.335 1.804-3.987 4.145-4.247 5.621.537-.278 1.24-.375 1.929-.311 1.804.167 3.226 1.648 3.226 3.489a3.5 3.5 0 01-3.5 3.5c-1.073 0-2.099-.49-2.748-1.179zm10 0C13.553 16.227 13 15 13 13.011c0-3.5 2.457-6.637 6.03-8.188l.893 1.378c-3.335 1.804-3.987 4.145-4.247 5.621.537-.278 1.24-.375 1.929-.311 1.804.167 3.226 1.648 3.226 3.489a3.5 3.5 0 01-3.5 3.5c-1.073 0-2.099-.49-2.748-1.179z" />
                    </svg>
                    <p className="pt-2 text-gray-700 dark:text-gray-300 italic">
                      {testimonial.quote}
                    </p>
                  </div>
                </div>
              </motion.div>
            ))}
          </div>
          
          {/* –ö–ª–∏–µ–Ω—Ç—Å–∫–∞—è –±–∞–∑–∞ - –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è */}
          <motion.div 
            className="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 border border-gray-100 dark:border-gray-700"
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.6 }}
          >
            <h3 className="text-xl font-bold text-gray-900 dark:text-white mb-6 text-center">
              –ù–∞—à–∏ –∫–ª–∏–µ–Ω—Ç—ã –ø–æ —Å–µ–≥–º–µ–Ω—Ç–∞–º
            </h3>
            
            <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4">
              {[
                { segment: '–ê–≤—Ç–æ–¥–∏–ª–µ—Ä—ã', count: 125, color: '#7B2CBF', icon: 'üöó' },
                { segment: '–ê–≤—Ç–æ—Å–∞–ª–æ–Ω—ã', count: 84, color: '#0891B2', icon: 'üè¢' },
                { segment: '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã', count: 36, color: '#F59E0B', icon: 'üí∞' },
                { segment: '–ò–º–ø–æ—Ä—Ç–µ—Ä—ã', count: 18, color: '#059669', icon: 'üö¢' },
                { segment: '–°–µ—Ä–≤–∏—Å–Ω—ã–µ —Ü–µ–Ω—Ç—Ä—ã', count: 42, color: '#DC2626', icon: 'üîß' },
                { segment: '–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—ã', count: 7, color: '#7C3AED', icon: 'üåê' }
              ].map((clientGroup, index) => (
                <motion.div 
                  key={index}
                  className="bg-gray-50 dark:bg-gray-700/30 rounded-lg p-4 text-center"
                  initial={{ opacity: 0, scale: 0.9 }}
                  whileInView={{ opacity: 1, scale: 1 }}
                  viewport={{ once: true }}
                  transition={{ duration: 0.4, delay: index * 0.1 }}
                >
                  <div className="w-12 h-12 mx-auto rounded-full flex items-center justify-center mb-3" style={{ backgroundColor: `${clientGroup.color}30` }}>
                    <span className="text-2xl">{clientGroup.icon}</span>
                  </div>
                  <div 
                    className="text-2xl font-bold mb-1" 
                    style={{ color: clientGroup.color }}
                  >
                    <AnimatedCounter value={clientGroup.count} suffix="+" />
                  </div>
                  <div className="text-sm text-gray-600 dark:text-gray-400">{clientGroup.segment}</div>
                  
                  {/* –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è */}
                  <div className="w-full h-1 bg-gray-200 dark:bg-gray-600 rounded-full mt-2 overflow-hidden">
                    <motion.div 
                      className="h-full rounded-full"
                      style={{ backgroundColor: clientGroup.color }}
                      initial={{ width: 0 }}
                      whileInView={{ width: `${(clientGroup.count / 150) * 100}%` }}
                      viewport={{ once: true }}
                      transition={{ duration: 1.5, delay: 0.2 }}
                    />
                  </div>
                </motion.div>
              ))}
            </div>
            
            <div className="mt-8 text-center">
              <p className="text-gray-600 dark:text-gray-400">
                –ë–æ–ª–µ–µ 300 –∫–æ–º–ø–∞–Ω–∏–π –∏–∑ –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω–æ–π –∏–Ω–¥—É—Å—Ç—Ä–∏–∏ —É–∂–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–ª–∏ —Å–≤–æ–∏ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å—ã —Å –ø–æ–º–æ—â—å—é Car-Sale
              </p>
            </div>
          </motion.div>
        </div>
      </section>
      
      {/* CTA-—Å–µ–∫—Ü–∏—è */}
      <section className="py-16 px-4 relative overflow-hidden">
        <div className="container mx-auto">
          <motion.div 
            className="bg-gradient-to-r from-primary to-primary-dark rounded-2xl overflow-hidden shadow-xl relative"
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.7 }}
          >
            {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã */}
            <div className="absolute -top-20 -right-20 w-64 h-64 bg-white/10 rounded-full"></div>
            <div className="absolute -bottom-20 -left-20 w-64 h-64 bg-white/5 rounded-full"></div>
            
            <div className="relative px-6 py-12 sm:px-12 sm:py-16 text-center">
              <h2 className="text-2xl sm:text-3xl font-bold text-white mb-4">
                {t.cta.title}
              </h2>
              
              <p className="text-white/80 mb-8 max-w-lg mx-auto">
                {t.cta.description}
              </p>
              
              <div className="flex flex-col sm:flex-row gap-4 justify-center">
                <motion.button
                  className="px-8 py-4 bg-white hover:bg-gray-100 text-primary font-medium rounded-lg shadow-lg"
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                >
                  {t.cta.primaryButton}
                </motion.button>
                
                <motion.button
                  className="px-8 py-4 bg-transparent hover:bg-white/10 text-white border border-white font-medium rounded-lg"
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                >
                  {t.cta.secondaryButton}
                </motion.button>
              </div>
            </div>
          </motion.div>
        </div>
      </section>
    </div>
  );
}